<?xml version='1.0'?>
<signatures version='1.0'>
<constant const='true' declared_type='NSString*' name='A2IncompatibleMethodSignatureKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationDidFinishNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationDidStartNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationFailingURLRequestErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingOperationFailingURLResponseErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingReachabilityDidChangeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingReachabilityNotificationStatusItem' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteAssetPathKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteResponseDataKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteResponseSerializerKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidCompleteSerializedResponseKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishAssetPathKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishErrorKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishResponseDataKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishResponseSerializerKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidFinishSerializedResponseKey' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidResumeNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidStartNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFNetworkingTaskDidSuspendNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFURLRequestSerializationErrorDomain' type='@'/>
<constant const='true' declared_type='NSString*' name='AFURLResponseSerializationErrorDomain' type='@'/>
<constant const='true' declared_type='NSString*' name='AFURLSessionDidInvalidateNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='AFURLSessionDownloadTaskDidFailToMoveFileNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SDWebImageDownloadStartNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SDWebImageDownloadStopNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SIAlertViewDidDismissNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SIAlertViewDidShowNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SIAlertViewWillDismissNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='SIAlertViewWillShowNotification' type='@'/>
<constant const='true' declared_type='NSString*' name='YLMomentIso8601Format' type='@'/>
<constant const='true' declared_type='NSTimeInterval' name='kAFUploadStream3GSuggestedDelay' type='d'/>
<constant const='true' declared_type='NSUInteger' name='kAFUploadStream3GSuggestedPacketSize' type='I'/>
<enum name='AFHTTPRequestQueryStringDefaultStyle' value='0'/>
<enum name='AFNetworkReachabilityStatusNotReachable' value='0'/>
<enum name='AFNetworkReachabilityStatusReachableViaWWAN' value='1'/>
<enum name='AFNetworkReachabilityStatusReachableViaWiFi' value='2'/>
<enum name='AFNetworkReachabilityStatusUnknown' value='-1'/>
<enum name='AFSSLPinningModeCertificate' value='2'/>
<enum name='AFSSLPinningModeNone' value='0'/>
<enum name='AFSSLPinningModePublicKey' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking_NSURLConnection' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking_NSURLSession' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking_Reachability' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking_Security' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking_Serialization' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_AFNetworking_UIKit' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_BlocksKit' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_BlocksKit_All' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_BlocksKit_Core' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_BlocksKit_DynamicDelegate' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_BlocksKit_MessageUI' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_BlocksKit_UIKit' value='2'/>
<enum name='COCOAPODS_VERSION_MAJOR_CRGradientNavigationBar' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_MBProgressHUD' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_NZCircularImageView' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_REMenu' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_SDWebImage' value='3'/>
<enum name='COCOAPODS_VERSION_MAJOR_SDWebImage_Core' value='3'/>
<enum name='COCOAPODS_VERSION_MAJOR_SIAlertView' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_SVWebViewController' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_SpinKit' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_UIActivityIndicator_for_SDWebImage' value='1'/>
<enum name='COCOAPODS_VERSION_MAJOR_UIControl_JTTargetActionBlock' value='0'/>
<enum name='COCOAPODS_VERSION_MAJOR_YLMoment' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking' value='3'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking_NSURLConnection' value='3'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking_NSURLSession' value='3'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking_Reachability' value='3'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking_Security' value='3'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking_Serialization' value='3'/>
<enum name='COCOAPODS_VERSION_MINOR_AFNetworking_UIKit' value='3'/>
<enum name='COCOAPODS_VERSION_MINOR_BlocksKit' value='2'/>
<enum name='COCOAPODS_VERSION_MINOR_BlocksKit_All' value='2'/>
<enum name='COCOAPODS_VERSION_MINOR_BlocksKit_Core' value='2'/>
<enum name='COCOAPODS_VERSION_MINOR_BlocksKit_DynamicDelegate' value='2'/>
<enum name='COCOAPODS_VERSION_MINOR_BlocksKit_MessageUI' value='2'/>
<enum name='COCOAPODS_VERSION_MINOR_BlocksKit_UIKit' value='2'/>
<enum name='COCOAPODS_VERSION_MINOR_CRGradientNavigationBar' value='3'/>
<enum name='COCOAPODS_VERSION_MINOR_MBProgressHUD' value='8'/>
<enum name='COCOAPODS_VERSION_MINOR_NZCircularImageView' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_REMenu' value='8'/>
<enum name='COCOAPODS_VERSION_MINOR_SDWebImage' value='6'/>
<enum name='COCOAPODS_VERSION_MINOR_SDWebImage_Core' value='6'/>
<enum name='COCOAPODS_VERSION_MINOR_SIAlertView' value='3'/>
<enum name='COCOAPODS_VERSION_MINOR_SVWebViewController' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_SpinKit' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_UIActivityIndicator_for_SDWebImage' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_UIControl_JTTargetActionBlock' value='0'/>
<enum name='COCOAPODS_VERSION_MINOR_YLMoment' value='5'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking_NSURLConnection' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking_NSURLSession' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking_Reachability' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking_Security' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking_Serialization' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_AFNetworking_UIKit' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_BlocksKit' value='2'/>
<enum name='COCOAPODS_VERSION_PATCH_BlocksKit_All' value='2'/>
<enum name='COCOAPODS_VERSION_PATCH_BlocksKit_Core' value='2'/>
<enum name='COCOAPODS_VERSION_PATCH_BlocksKit_DynamicDelegate' value='2'/>
<enum name='COCOAPODS_VERSION_PATCH_BlocksKit_MessageUI' value='2'/>
<enum name='COCOAPODS_VERSION_PATCH_BlocksKit_UIKit' value='2'/>
<enum name='COCOAPODS_VERSION_PATCH_CRGradientNavigationBar' value='2'/>
<enum name='COCOAPODS_VERSION_PATCH_MBProgressHUD' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_NZCircularImageView' value='4'/>
<enum name='COCOAPODS_VERSION_PATCH_REMenu' value='5'/>
<enum name='COCOAPODS_VERSION_PATCH_SDWebImage' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_SDWebImage_Core' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_SIAlertView' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_SVWebViewController' value='0'/>
<enum name='COCOAPODS_VERSION_PATCH_SpinKit' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_UIActivityIndicator_for_SDWebImage' value='5'/>
<enum name='COCOAPODS_VERSION_PATCH_UIControl_JTTargetActionBlock' value='1'/>
<enum name='COCOAPODS_VERSION_PATCH_YLMoment' value='0'/>
<enum name='MBProgressHUDAnimationFade' value='0'/>
<enum name='MBProgressHUDAnimationZoom' value='1'/>
<enum name='MBProgressHUDAnimationZoomIn' value='2'/>
<enum name='MBProgressHUDAnimationZoomOut' value='1'/>
<enum name='MBProgressHUDModeAnnularDeterminate' value='3'/>
<enum name='MBProgressHUDModeCustomView' value='4'/>
<enum name='MBProgressHUDModeDeterminate' value='1'/>
<enum name='MBProgressHUDModeDeterminateHorizontalBar' value='2'/>
<enum name='MBProgressHUDModeIndeterminate' value='0'/>
<enum name='MBProgressHUDModeText' value='5'/>
<enum name='REMenuImageAlignmentLeft' value='0'/>
<enum name='REMenuImageAlignmentRight' value='1'/>
<enum name='REMenuLiveBackgroundStyleDark' value='1'/>
<enum name='REMenuLiveBackgroundStyleLight' value='0'/>
<enum name='RTSpinKitViewStyleBounce' value='1'/>
<enum name='RTSpinKitViewStylePlane' value='0'/>
<enum name='RTSpinKitViewStylePulse' value='4'/>
<enum name='RTSpinKitViewStyleWanderingCubes' value='3'/>
<enum name='RTSpinKitViewStyleWave' value='2'/>
<enum name='SDImageCacheTypeDisk' value='1'/>
<enum name='SDImageCacheTypeMemory' value='2'/>
<enum name='SDImageCacheTypeNone' value='0'/>
<enum name='SDWebImageAllowInvalidSSLCertificates' value='128'/>
<enum name='SDWebImageCacheMemoryOnly' value='4'/>
<enum name='SDWebImageContinueInBackground' value='32'/>
<enum name='SDWebImageDownloaderAllowInvalidSSLCertificates' value='64'/>
<enum name='SDWebImageDownloaderContinueInBackground' value='16'/>
<enum name='SDWebImageDownloaderFIFOExecutionOrder' value='0'/>
<enum name='SDWebImageDownloaderHandleCookies' value='32'/>
<enum name='SDWebImageDownloaderHighPriority' value='128'/>
<enum name='SDWebImageDownloaderIgnoreCachedResponse' value='8'/>
<enum name='SDWebImageDownloaderLIFOExecutionOrder' value='1'/>
<enum name='SDWebImageDownloaderLowPriority' value='1'/>
<enum name='SDWebImageDownloaderProgressiveDownload' value='2'/>
<enum name='SDWebImageDownloaderUseNSURLCache' value='4'/>
<enum name='SDWebImageHandleCookies' value='64'/>
<enum name='SDWebImageHighPriority' value='256'/>
<enum name='SDWebImageLowPriority' value='2'/>
<enum name='SDWebImageProgressiveDownload' value='8'/>
<enum name='SDWebImageRefreshCached' value='16'/>
<enum name='SDWebImageRetryFailed' value='1'/>
<enum name='SIAlertViewBackgroundStyleGradient' value='0'/>
<enum name='SIAlertViewBackgroundStyleSolid' value='1'/>
<enum name='SIAlertViewButtonTypeCancel' value='2'/>
<enum name='SIAlertViewButtonTypeDefault' value='0'/>
<enum name='SIAlertViewButtonTypeDestructive' value='1'/>
<enum name='SIAlertViewButtonsListStyleNormal' value='0'/>
<enum name='SIAlertViewButtonsListStyleRows' value='1'/>
<enum name='SIAlertViewTransitionStyleBounce' value='3'/>
<enum name='SIAlertViewTransitionStyleDropDown' value='4'/>
<enum name='SIAlertViewTransitionStyleFade' value='2'/>
<enum name='SIAlertViewTransitionStyleSlideFromBottom' value='0'/>
<enum name='SIAlertViewTransitionStyleSlideFromTop' value='1'/>
<function name='AFStringFromNetworkReachabilityStatus'>
<arg declared_type='AFNetworkReachabilityStatus' name='status' type='i'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function inline='true' name='BKNextHelper'>
<arg declared_type='NSArray*' name='array' type='@'/>
<arg declared_type='CFMutableDictionaryRef*' name='eachTablePtr' type='^^{__CFDictionary}'/>
<retval declared_type='id' type='@'/>
</function>
<function name='REUIKitIsFlatMode'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='SDScaledImageForKey'>
<arg declared_type='NSString*' name='key' type='@'/>
<arg declared_type='UIImage*' name='image' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</function>
<class name='A2BlockInvocation'>
<method selector='block'>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithBlock:'>
<arg declared_type='id' index='0' name='block' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithBlock:methodSignature:'>
<arg declared_type='id' index='0' name='block' type='@'/>
<arg declared_type='NSMethodSignature*' index='1' name='methodSignature' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='invokeWithInvocation:'>
<arg declared_type='NSInvocation*' index='0' name='inv' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='invokeWithInvocation:returnValue:'>
<arg declared_type='NSInvocation*' index='0' name='inv' type='@'/>
<arg declared_type='NSValue**' index='1' name='returnValue' type='^@' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='methodSignature'>
<retval declared_type='NSMethodSignature*' type='@'/>
</method>
<method class_method='true' selector='methodSignatureForBlock:'>
<arg declared_type='id' index='0' name='block' type='@'/>
<retval declared_type='NSMethodSignature*' type='@'/>
</method>
<method selector='setMethodSignature:'>
<arg declared_type='NSMethodSignature*' index='0' name='methodSignature' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='A2DynamicDelegate'>
<method selector='blockImplementationForClassMethod:'>
<arg declared_type='SEL' index='0' name='selector' type=':'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='blockImplementationForMethod:'>
<arg declared_type='SEL' index='0' name='selector' type=':'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='handlers'>
<retval declared_type='NSMutableDictionary*' type='@'/>
</method>
<method selector='implementClassMethod:withBlock:'>
<arg declared_type='SEL' index='0' name='selector' type=':'/>
<arg declared_type='id' index='1' name='block' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='implementMethod:withBlock:'>
<arg declared_type='SEL' index='0' name='selector' type=':'/>
<arg declared_type='id' index='1' name='block' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithProtocol:'>
<arg declared_type='Protocol*' index='0' name='protocol' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='protocol'>
<retval declared_type='Protocol*' type='@'/>
</method>
<method selector='realDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='removeBlockImplementationForClassMethod:'>
<arg declared_type='SEL' index='0' name='selector' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeBlockImplementationForMethod:'>
<arg declared_type='SEL' index='0' name='selector' type=':'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHandlers:'>
<arg declared_type='NSMutableDictionary*' index='0' name='handlers' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRealDelegate:'>
<arg declared_type='id' index='0' name='realDelegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFCompoundResponseSerializer'>
<method class_method='true' selector='compoundSerializerWithResponseSerializers:'>
<arg declared_type='NSArray*' index='0' name='responseSerializers' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseSerializers'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='AFHTTPRequestOperation'>
<method selector='response'>
<retval declared_type='NSHTTPURLResponse*' type='@'/>
</method>
<method selector='responseObject'>
<retval declared_type='id' type='@'/>
</method>
<method selector='responseSerializer'>
<retval declared_type='AFHTTPResponseSerializer*' type='@'/>
</method>
<method selector='setCompletionBlockWithSuccess:failure:'>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='0' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='1' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseSerializer:'>
<arg declared_type='AFHTTPResponseSerializer*' index='0' name='responseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFHTTPRequestOperationManager'>
<method selector='DELETE:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='GET:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='HEAD:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='HTTPRequestOperationWithRequest:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='1' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='2' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='PATCH:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='POST:parameters:constructingBodyWithBlock:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='2' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='POST:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='PUT:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(AFHTTPRequestOperation *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(AFHTTPRequestOperation *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='AFHTTPRequestOperation*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='AFHTTPRequestOperation*' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='completionGroup'>
<retval declared_type='dispatch_group_t' type='@'/>
</method>
<method selector='completionQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='credential'>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='initWithBaseURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='manager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='reachabilityManager'>
<retval declared_type='AFNetworkReachabilityManager*' type='@'/>
</method>
<method selector='requestSerializer'>
<retval declared_type='AFHTTPRequestSerializer*' type='@'/>
</method>
<method selector='responseSerializer'>
<retval declared_type='AFHTTPResponseSerializer*' type='@'/>
</method>
<method selector='securityPolicy'>
<retval declared_type='AFSecurityPolicy*' type='@'/>
</method>
<method selector='setCompletionGroup:'>
<arg declared_type='dispatch_group_t' index='0' name='completionGroup' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='completionQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCredential:'>
<arg declared_type='NSURLCredential*' index='0' name='credential' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOperationQueue:'>
<arg declared_type='NSOperationQueue*' index='0' name='operationQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReachabilityManager:'>
<arg declared_type='AFNetworkReachabilityManager*' index='0' name='reachabilityManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRequestSerializer:'>
<arg declared_type='AFHTTPRequestSerializer*' index='0' name='requestSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseSerializer:'>
<arg declared_type='AFHTTPResponseSerializer*' index='0' name='responseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSecurityPolicy:'>
<arg declared_type='AFSecurityPolicy*' index='0' name='securityPolicy' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg declared_type='BOOL' index='0' name='shouldUseCredentialStorage' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldUseCredentialStorage'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AFHTTPRequestSerializer'>
<method selector='HTTPMethodsEncodingParametersInURI'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='HTTPRequestHeaders'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='HTTPShouldHandleCookies'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='HTTPShouldUsePipelining'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allowsCellularAccess'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='cachePolicy'>
<retval declared_type='NSURLRequestCachePolicy' type='I'/>
</method>
<method selector='clearAuthorizationHeader'>
<retval declared_type='void' type='v'/>
</method>
<method selector='multipartFormRequestWithMethod:URLString:parameters:constructingBodyWithBlock:'>
<arg declared_type='NSString*' index='0' name='method' type='@'/>
<arg declared_type='NSString*' index='1' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='3' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='multipartFormRequestWithMethod:URLString:parameters:constructingBodyWithBlock:error:'>
<arg declared_type='NSString*' index='0' name='method' type='@'/>
<arg declared_type='NSString*' index='1' name='URLString' type='@'/>
<arg declared_type='NSDictionary*' index='2' name='parameters' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='3' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSError**' index='4' name='error' type='^@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='networkServiceType'>
<retval declared_type='NSURLRequestNetworkServiceType' type='I'/>
</method>
<method selector='requestWithMethod:URLString:parameters:'>
<arg declared_type='NSString*' index='0' name='method' type='@'/>
<arg declared_type='NSString*' index='1' name='URLString' type='@'/>
<arg declared_type='id' index='2' name='parameters' type='@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithMethod:URLString:parameters:error:'>
<arg declared_type='NSString*' index='0' name='method' type='@'/>
<arg declared_type='NSString*' index='1' name='URLString' type='@'/>
<arg declared_type='id' index='2' name='parameters' type='@'/>
<arg declared_type='NSError**' index='3' name='error' type='^@'/>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method selector='requestWithMultipartFormRequest:writingStreamContentsToFile:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSURL*' index='1' name='fileURL' type='@'/>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='2' name='handler' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSMutableURLRequest*' type='@'/>
</method>
<method class_method='true' selector='serializer'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAllowsCellularAccess:'>
<arg declared_type='BOOL' index='0' name='allowsCellularAccess' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderFieldWithToken:'>
<arg declared_type='NSString*' index='0' name='token' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAuthorizationHeaderFieldWithUsername:password:'>
<arg declared_type='NSString*' index='0' name='username' type='@'/>
<arg declared_type='NSString*' index='1' name='password' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCachePolicy:'>
<arg declared_type='NSURLRequestCachePolicy' index='0' name='cachePolicy' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPMethodsEncodingParametersInURI:'>
<arg declared_type='NSSet*' index='0' name='HTTPMethodsEncodingParametersInURI' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPShouldHandleCookies:'>
<arg declared_type='BOOL' index='0' name='HTTPShouldHandleCookies' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHTTPShouldUsePipelining:'>
<arg declared_type='BOOL' index='0' name='HTTPShouldUsePipelining' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNetworkServiceType:'>
<arg declared_type='NSURLRequestNetworkServiceType' index='0' name='networkServiceType' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQueryStringSerializationWithBlock:'>
<arg declared_type='NSString *(^)(NSURLRequest *, NSDictionary *, NSError **)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<arg declared_type='NSError**' type='^@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setQueryStringSerializationWithStyle:'>
<arg declared_type='AFHTTPRequestQueryStringSerializationStyle' index='0' name='style' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg declared_type='NSStringEncoding' index='0' name='stringEncoding' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeoutInterval:'>
<arg declared_type='NSTimeInterval' index='0' name='timeoutInterval' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forHTTPHeaderField:'>
<arg declared_type='NSString*' index='0' name='value' type='@'/>
<arg declared_type='NSString*' index='1' name='field' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='timeoutInterval'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
</class>
<class name='AFHTTPResponseSerializer'>
<method selector='acceptableContentTypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='acceptableStatusCodes'>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method class_method='true' selector='serializer'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAcceptableContentTypes:'>
<arg declared_type='NSSet*' index='0' name='acceptableContentTypes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAcceptableStatusCodes:'>
<arg declared_type='NSIndexSet*' index='0' name='acceptableStatusCodes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStringEncoding:'>
<arg declared_type='NSStringEncoding' index='0' name='stringEncoding' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stringEncoding'>
<retval declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='validateResponse:data:error:'>
<arg declared_type='NSHTTPURLResponse*' index='0' name='response' type='@'/>
<arg declared_type='NSData*' index='1' name='data' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AFHTTPSessionManager'>
<method selector='DELETE:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='GET:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='HEAD:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='PATCH:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='POST:parameters:constructingBodyWithBlock:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='2' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='POST:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='PUT:parameters:success:failure:'>
<arg declared_type='NSString*' index='0' name='URLString' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='void (^)(NSURLSessionDataTask *, id)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLSessionDataTask *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='baseURL'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='initWithBaseURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithBaseURL:sessionConfiguration:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='NSURLSessionConfiguration*' index='1' name='configuration' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='manager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='requestSerializer'>
<retval declared_type='AFHTTPRequestSerializer*' type='@'/>
</method>
<method selector='responseSerializer'>
<retval declared_type='AFHTTPResponseSerializer*' type='@'/>
</method>
<method selector='setRequestSerializer:'>
<arg declared_type='AFHTTPRequestSerializer*' index='0' name='requestSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseSerializer:'>
<arg declared_type='AFHTTPResponseSerializer*' index='0' name='responseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFImageResponseSerializer'>
<method selector='automaticallyInflatesResponseImage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imageScale'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setAutomaticallyInflatesResponseImage:'>
<arg declared_type='BOOL' index='0' name='automaticallyInflatesResponseImage' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageScale:'>
<arg declared_type='CGFloat' index='0' name='imageScale' type='f'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFJSONRequestSerializer'>
<method class_method='true' selector='serializerWithWritingOptions:'>
<arg declared_type='NSJSONWritingOptions' index='0' name='writingOptions' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setWritingOptions:'>
<arg declared_type='NSJSONWritingOptions' index='0' name='writingOptions' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writingOptions'>
<retval declared_type='NSJSONWritingOptions' type='I'/>
</method>
</class>
<class name='AFJSONResponseSerializer'>
<method selector='readingOptions'>
<retval declared_type='NSJSONReadingOptions' type='I'/>
</method>
<method selector='removesKeysWithNullValues'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='serializerWithReadingOptions:'>
<arg declared_type='NSJSONReadingOptions' index='0' name='readingOptions' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setReadingOptions:'>
<arg declared_type='NSJSONReadingOptions' index='0' name='readingOptions' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRemovesKeysWithNullValues:'>
<arg declared_type='BOOL' index='0' name='removesKeysWithNullValues' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFNetworkActivityIndicatorManager'>
<method selector='decrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='incrementActivityCount'>
<retval declared_type='void' type='v'/>
</method>
<method selector='isEnabled'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isNetworkActivityIndicatorVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEnabled:'>
<arg declared_type='BOOL' index='0' name='enabled' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='AFNetworkReachabilityManager'>
<method selector='initWithReachability:'>
<arg declared_type='SCNetworkReachabilityRef' index='0' name='reachability' type='^{__SCNetworkReachability=}'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isReachable'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachableViaWWAN'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isReachableViaWiFi'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='localizedNetworkReachabilityStatusString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='managerForAddress:'>
<arg const='true' declared_type='struct sockaddr_in*' index='0' name='address' type='^{sockaddr_in=CCS{in_addr=I}[8c]}'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='managerForDomain:'>
<arg declared_type='NSString*' index='0' name='domain' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='networkReachabilityStatus'>
<retval declared_type='AFNetworkReachabilityStatus' type='i'/>
</method>
<method selector='setReachabilityStatusChangeBlock:'>
<arg declared_type='void (^)(AFNetworkReachabilityStatus)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='AFNetworkReachabilityStatus' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='id' type='@'/>
</method>
<method selector='startMonitoring'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopMonitoring'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFPropertyListRequestSerializer'>
<method selector='format'>
<retval declared_type='NSPropertyListFormat' type='I'/>
</method>
<method class_method='true' selector='serializerWithFormat:writeOptions:'>
<arg declared_type='NSPropertyListFormat' index='0' name='format' type='I'/>
<arg declared_type='NSPropertyListWriteOptions' index='1' name='writeOptions' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setFormat:'>
<arg declared_type='NSPropertyListFormat' index='0' name='format' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWriteOptions:'>
<arg declared_type='NSPropertyListWriteOptions' index='0' name='writeOptions' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='writeOptions'>
<retval declared_type='NSPropertyListWriteOptions' type='I'/>
</method>
</class>
<class name='AFPropertyListResponseSerializer'>
<method selector='format'>
<retval declared_type='NSPropertyListFormat' type='I'/>
</method>
<method selector='readOptions'>
<retval declared_type='NSPropertyListReadOptions' type='I'/>
</method>
<method class_method='true' selector='serializerWithFormat:readOptions:'>
<arg declared_type='NSPropertyListFormat' index='0' name='format' type='I'/>
<arg declared_type='NSPropertyListReadOptions' index='1' name='readOptions' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setFormat:'>
<arg declared_type='NSPropertyListFormat' index='0' name='format' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReadOptions:'>
<arg declared_type='NSPropertyListReadOptions' index='0' name='readOptions' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='AFSecurityPolicy'>
<method selector='SSLPinningMode'>
<retval declared_type='AFSSLPinningMode' type='I'/>
</method>
<method selector='allowInvalidCertificates'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='defaultPolicy'>
<retval declared_type='id' type='@'/>
</method>
<method selector='evaluateServerTrust:'>
<arg declared_type='SecTrustRef' index='0' name='serverTrust' type='^{__SecTrust=}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='evaluateServerTrust:forDomain:'>
<arg declared_type='SecTrustRef' index='0' name='serverTrust' type='^{__SecTrust=}'/>
<arg declared_type='NSString*' index='1' name='domain' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pinnedCertificates'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='policyWithPinningMode:'>
<arg declared_type='AFSSLPinningMode' index='0' name='pinningMode' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setAllowInvalidCertificates:'>
<arg declared_type='BOOL' index='0' name='allowInvalidCertificates' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPinnedCertificates:'>
<arg declared_type='NSArray*' index='0' name='pinnedCertificates' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSSLPinningMode:'>
<arg declared_type='AFSSLPinningMode' index='0' name='SSLPinningMode' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValidatesCertificateChain:'>
<arg declared_type='BOOL' index='0' name='validatesCertificateChain' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValidatesDomainName:'>
<arg declared_type='BOOL' index='0' name='validatesDomainName' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='validatesCertificateChain'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='validatesDomainName'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='AFURLConnectionOperation'>
<method class_method='true' selector='batchOfRequestOperations:progressBlock:completionBlock:'>
<arg declared_type='NSArray*' index='0' name='operations' type='@'/>
<arg declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true' index='1' name='progressBlock' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSArray *)' function_pointer='true' index='2' name='completionBlock' type='@?'>
<arg declared_type='NSArray*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='completionGroup'>
<retval declared_type='dispatch_group_t' type='@'/>
</method>
<method selector='completionQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='credential'>
<retval declared_type='NSURLCredential*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='initWithRequest:'>
<arg declared_type='NSURLRequest*' index='0' name='urlRequest' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='inputStream'>
<retval declared_type='NSInputStream*' type='@'/>
</method>
<method selector='isPaused'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='outputStream'>
<retval declared_type='NSOutputStream*' type='@'/>
</method>
<method selector='pause'>
<retval declared_type='void' type='v'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='response'>
<retval declared_type='NSURLResponse*' type='@'/>
</method>
<method selector='responseData'>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='responseString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='responseStringEncoding'>
<retval declared_type='NSStringEncoding' type='I'/>
</method>
<method selector='resume'>
<retval declared_type='void' type='v'/>
</method>
<method selector='runLoopModes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='securityPolicy'>
<retval declared_type='AFSecurityPolicy*' type='@'/>
</method>
<method selector='setCacheResponseBlock:'>
<arg declared_type='NSCachedURLResponse *(^)(NSURLConnection *, NSCachedURLResponse *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSCachedURLResponse*' type='@'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionGroup:'>
<arg declared_type='dispatch_group_t' index='0' name='completionGroup' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='completionQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCredential:'>
<arg declared_type='NSURLCredential*' index='0' name='credential' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadProgressBlock:'>
<arg declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setInputStream:'>
<arg declared_type='NSInputStream*' index='0' name='inputStream' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOutputStream:'>
<arg declared_type='NSOutputStream*' index='0' name='outputStream' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRedirectResponseBlock:'>
<arg declared_type='NSURLRequest *(^)(NSURLConnection *, NSURLRequest *, NSURLResponse *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRunLoopModes:'>
<arg declared_type='NSSet*' index='0' name='runLoopModes' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSecurityPolicy:'>
<arg declared_type='AFSecurityPolicy*' index='0' name='securityPolicy' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldExecuteAsBackgroundTaskWithExpirationHandler:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='handler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldUseCredentialStorage:'>
<arg declared_type='BOOL' index='0' name='shouldUseCredentialStorage' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUploadProgressBlock:'>
<arg declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUserInfo:'>
<arg declared_type='NSDictionary*' index='0' name='userInfo' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillSendRequestForAuthenticationChallengeBlock:'>
<arg declared_type='void (^)(NSURLConnection *, NSURLAuthenticationChallenge *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldUseCredentialStorage'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='userInfo'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='AFURLSessionManager'>
<method selector='attemptsToRecreateUploadTasksForBackgroundSessions'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='completionGroup'>
<retval declared_type='dispatch_group_t' type='@'/>
</method>
<method selector='completionQueue'>
<retval declared_type='dispatch_queue_t' type='@'/>
</method>
<method selector='dataTaskWithRequest:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='void (^)(NSURLResponse *, id, NSError *)' function_pointer='true' index='1' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDataTask*' type='@'/>
</method>
<method selector='dataTasks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='downloadProgressForTask:'>
<arg declared_type='NSURLSessionDownloadTask*' index='0' name='downloadTask' type='@'/>
<retval declared_type='NSProgress*' type='@'/>
</method>
<method selector='downloadTaskWithRequest:progress:destination:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSProgress**' index='1' name='progress' type='^@'/>
<arg declared_type='NSURL *(^)(NSURL *, NSURLResponse *)' function_pointer='true' index='2' name='destination' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</arg>
<arg declared_type='void (^)(NSURLResponse *, NSURL *, NSError *)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDownloadTask*' type='@'/>
</method>
<method selector='downloadTaskWithResumeData:progress:destination:completionHandler:'>
<arg declared_type='NSData*' index='0' name='resumeData' type='@'/>
<arg declared_type='NSProgress**' index='1' name='progress' type='^@'/>
<arg declared_type='NSURL *(^)(NSURL *, NSURLResponse *)' function_pointer='true' index='2' name='destination' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</arg>
<arg declared_type='void (^)(NSURLResponse *, NSURL *, NSError *)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionDownloadTask*' type='@'/>
</method>
<method selector='downloadTasks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithSessionConfiguration:'>
<arg declared_type='NSURLSessionConfiguration*' index='0' name='configuration' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='invalidateSessionCancelingTasks:'>
<arg declared_type='BOOL' index='0' name='cancelPendingTasks' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='operationQueue'>
<retval declared_type='NSOperationQueue*' type='@'/>
</method>
<method selector='reachabilityManager'>
<retval declared_type='AFNetworkReachabilityManager*' type='@'/>
</method>
<method selector='responseSerializer'>
<retval declared_type='id' type='@'/>
</method>
<method selector='securityPolicy'>
<retval declared_type='AFSecurityPolicy*' type='@'/>
</method>
<method selector='session'>
<retval declared_type='NSURLSession*' type='@'/>
</method>
<method selector='setAttemptsToRecreateUploadTasksForBackgroundSessions:'>
<arg declared_type='BOOL' index='0' name='attemptsToRecreateUploadTasksForBackgroundSessions' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionGroup:'>
<arg declared_type='dispatch_group_t' index='0' name='completionGroup' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionQueue:'>
<arg declared_type='dispatch_queue_t' index='0' name='completionQueue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataTaskDidBecomeDownloadTaskBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionDataTask *, NSURLSessionDownloadTask *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSURLSessionDownloadTask*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataTaskDidReceiveDataBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionDataTask *, NSData *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataTaskDidReceiveResponseBlock:'>
<arg declared_type='NSURLSessionResponseDisposition (^)(NSURLSession *, NSURLSessionDataTask *, NSURLResponse *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='NSURLSessionResponseDisposition' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDataTaskWillCacheResponseBlock:'>
<arg declared_type='NSCachedURLResponse *(^)(NSURLSession *, NSURLSessionDataTask *, NSCachedURLResponse *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDataTask*' type='@'/>
<arg declared_type='NSCachedURLResponse*' type='@'/>
<retval declared_type='NSCachedURLResponse*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidFinishEventsForBackgroundURLSessionBlock:'>
<arg declared_type='void (^)(NSURLSession *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadTaskDidFinishDownloadingBlock:'>
<arg declared_type='NSURL *(^)(NSURLSession *, NSURLSessionDownloadTask *, NSURL *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDownloadTask*' type='@'/>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='NSURL*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadTaskDidResumeBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionDownloadTask *, int64_t, int64_t)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDownloadTask*' type='@'/>
<arg declared_type='int64_t' type='q'/>
<arg declared_type='int64_t' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDownloadTaskDidWriteDataBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionDownloadTask *, int64_t, int64_t, int64_t)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionDownloadTask*' type='@'/>
<arg declared_type='int64_t' type='q'/>
<arg declared_type='int64_t' type='q'/>
<arg declared_type='int64_t' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setReachabilityManager:'>
<arg declared_type='AFNetworkReachabilityManager*' index='0' name='reachabilityManager' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseSerializer:'>
<arg declared_type='id' index='0' name='responseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSecurityPolicy:'>
<arg declared_type='AFSecurityPolicy*' index='0' name='securityPolicy' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSessionDidBecomeInvalidBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSError *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSessionDidReceiveAuthenticationChallengeBlock:'>
<arg declared_type='NSURLSessionAuthChallengeDisposition (^)(NSURLSession *, NSURLAuthenticationChallenge *, NSURLCredential **)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<arg declared_type='NSURLCredential**' type='^@'/>
<retval declared_type='NSURLSessionAuthChallengeDisposition' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskDidCompleteBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionTask *, NSError *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionTask*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskDidReceiveAuthenticationChallengeBlock:'>
<arg declared_type='NSURLSessionAuthChallengeDisposition (^)(NSURLSession *, NSURLSessionTask *, NSURLAuthenticationChallenge *, NSURLCredential **)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionTask*' type='@'/>
<arg declared_type='NSURLAuthenticationChallenge*' type='@'/>
<arg declared_type='NSURLCredential**' type='^@'/>
<retval declared_type='NSURLSessionAuthChallengeDisposition' type='i'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskDidSendBodyDataBlock:'>
<arg declared_type='void (^)(NSURLSession *, NSURLSessionTask *, int64_t, int64_t, int64_t)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionTask*' type='@'/>
<arg declared_type='int64_t' type='q'/>
<arg declared_type='int64_t' type='q'/>
<arg declared_type='int64_t' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskNeedNewBodyStreamBlock:'>
<arg declared_type='NSInputStream *(^)(NSURLSession *, NSURLSessionTask *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionTask*' type='@'/>
<retval declared_type='NSInputStream*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskWillPerformHTTPRedirectionBlock:'>
<arg declared_type='NSURLRequest *(^)(NSURLSession *, NSURLSessionTask *, NSURLResponse *, NSURLRequest *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLSession*' type='@'/>
<arg declared_type='NSURLSessionTask*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='tasks'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='uploadProgressForTask:'>
<arg declared_type='NSURLSessionUploadTask*' index='0' name='uploadTask' type='@'/>
<retval declared_type='NSProgress*' type='@'/>
</method>
<method selector='uploadTaskWithRequest:fromData:progress:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSData*' index='1' name='bodyData' type='@'/>
<arg declared_type='NSProgress**' index='2' name='progress' type='^@'/>
<arg declared_type='void (^)(NSURLResponse *, id, NSError *)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionUploadTask*' type='@'/>
</method>
<method selector='uploadTaskWithRequest:fromFile:progress:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSURL*' index='1' name='fileURL' type='@'/>
<arg declared_type='NSProgress**' index='2' name='progress' type='^@'/>
<arg declared_type='void (^)(NSURLResponse *, id, NSError *)' function_pointer='true' index='3' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionUploadTask*' type='@'/>
</method>
<method selector='uploadTaskWithStreamedRequest:progress:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSProgress**' index='1' name='progress' type='^@'/>
<arg declared_type='void (^)(NSURLResponse *, id, NSError *)' function_pointer='true' index='2' name='completionHandler' type='@?'>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='id' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLSessionUploadTask*' type='@'/>
</method>
<method selector='uploadTasks'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='CRGradientNavigationBar'>
<method selector='setBarTintGradientColors:'>
<arg declared_type='NSArray*' index='0' name='barTintGradientColors' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MBBarProgressView'>
<method selector='lineColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='progressColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='progressRemainingColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='setLineColor:'>
<arg declared_type='UIColor*' index='0' name='lineColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressColor:'>
<arg declared_type='UIColor*' index='0' name='progressColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressRemainingColor:'>
<arg declared_type='UIColor*' index='0' name='progressRemainingColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MBProgressHUD'>
<method class_method='true' selector='HUDForView:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='allHUDsForView:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='animationType'>
<retval declared_type='MBProgressHUDAnimation' type='i'/>
</method>
<method selector='color'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='completionBlock'>
<retval declared_type='MBProgressHUDCompletionBlock' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='customView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='detailsLabelFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='detailsLabelText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dimBackground'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='graceTime'>
<retval declared_type='float' type='f'/>
</method>
<method selector='hide:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='hide:afterDelay:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='hideAllHUDsForView:animated:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method class_method='true' selector='hideHUDForView:animated:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithView:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithWindow:'>
<arg declared_type='UIWindow*' index='0' name='window' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isSquare'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='labelFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='labelText'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='margin'>
<retval declared_type='float' type='f'/>
</method>
<method selector='minShowTime'>
<retval declared_type='float' type='f'/>
</method>
<method selector='minSize'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='mode'>
<retval declared_type='MBProgressHUDMode' type='i'/>
</method>
<method selector='opacity'>
<retval declared_type='float' type='f'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='removeFromSuperViewOnHide'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setAnimationType:'>
<arg declared_type='MBProgressHUDAnimation' index='0' name='animationType' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setColor:'>
<arg declared_type='UIColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCompletionBlock:'>
<arg declared_type='MBProgressHUDCompletionBlock' function_pointer='true' index='0' name='completionBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomView:'>
<arg declared_type='UIView*' index='0' name='customView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDetailsLabelFont:'>
<arg declared_type='UIFont*' index='0' name='detailsLabelFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDetailsLabelText:'>
<arg declared_type='NSString*' index='0' name='detailsLabelText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDimBackground:'>
<arg declared_type='BOOL' index='0' name='dimBackground' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGraceTime:'>
<arg declared_type='float' index='0' name='graceTime' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelFont:'>
<arg declared_type='UIFont*' index='0' name='labelFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLabelText:'>
<arg declared_type='NSString*' index='0' name='labelText' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMargin:'>
<arg declared_type='float' index='0' name='margin' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinShowTime:'>
<arg declared_type='float' index='0' name='minShowTime' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinSize:'>
<arg declared_type='CGSize' index='0' name='minSize' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMode:'>
<arg declared_type='MBProgressHUDMode' index='0' name='mode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOpacity:'>
<arg declared_type='float' index='0' name='opacity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRemoveFromSuperViewOnHide:'>
<arg declared_type='BOOL' index='0' name='removeFromSuperViewOnHide' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSquare:'>
<arg declared_type='BOOL' index='0' name='square' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTaskInProgress:'>
<arg declared_type='BOOL' index='0' name='taskInProgress' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setXOffset:'>
<arg declared_type='float' index='0' name='xOffset' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setYOffset:'>
<arg declared_type='float' index='0' name='yOffset' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='show:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAnimated:whileExecutingBlock:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='dispatch_block_t' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAnimated:whileExecutingBlock:completionBlock:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='dispatch_block_t' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='MBProgressHUDCompletionBlock' function_pointer='true' index='2' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAnimated:whileExecutingBlock:onQueue:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='dispatch_block_t' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='dispatch_queue_t' index='2' name='queue' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showAnimated:whileExecutingBlock:onQueue:completionBlock:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<arg declared_type='dispatch_block_t' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='dispatch_queue_t' index='2' name='queue' type='@'/>
<arg declared_type='MBProgressHUDCompletionBlock' function_pointer='true' index='3' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showHUDAddedTo:animated:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='showWhileExecuting:onTarget:withObject:animated:'>
<arg declared_type='SEL' index='0' name='method' type=':'/>
<arg declared_type='id' index='1' name='target' type='@'/>
<arg declared_type='id' index='2' name='object' type='@'/>
<arg declared_type='BOOL' index='3' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='taskInProgress'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='xOffset'>
<retval declared_type='float' type='f'/>
</method>
<method selector='yOffset'>
<retval declared_type='float' type='f'/>
</method>
</class>
<class name='MBRoundProgressView'>
<method selector='backgroundTintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='isAnnular'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='progress'>
<retval declared_type='float' type='f'/>
</method>
<method selector='progressTintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='setAnnular:'>
<arg declared_type='BOOL' index='0' name='annular' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundTintColor:'>
<arg declared_type='UIColor*' index='0' name='backgroundTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgress:'>
<arg declared_type='float' index='0' name='progress' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressTintColor:'>
<arg declared_type='UIColor*' index='0' name='progressTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MFMailComposeViewController'>
<method selector='bk_completionBlock'>
<retval declared_type='void (^)(MFMailComposeViewController *, MFMailComposeResult, NSError *)' function_pointer='true' type='@?'>
<arg declared_type='MFMailComposeViewController*' type='@'/>
<arg declared_type='MFMailComposeResult' type='i'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_setCompletionBlock:'>
<arg declared_type='void (^)(MFMailComposeViewController *, MFMailComposeResult, NSError *)' function_pointer='true' index='0' name='bk_completionBlock' type='@?'>
<arg declared_type='MFMailComposeViewController*' type='@'/>
<arg declared_type='MFMailComposeResult' type='i'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='MFMessageComposeViewController'>
<method selector='bk_completionBlock'>
<retval declared_type='void (^)(MFMessageComposeViewController *, MessageComposeResult)' function_pointer='true' type='@?'>
<arg declared_type='MFMessageComposeViewController*' type='@'/>
<arg declared_type='MessageComposeResult' type='i'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_setCompletionBlock:'>
<arg declared_type='void (^)(MFMessageComposeViewController *, MessageComposeResult)' function_pointer='true' index='0' name='bk_completionBlock' type='@?'>
<arg declared_type='MFMessageComposeViewController*' type='@'/>
<arg declared_type='MessageComposeResult' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSArray'>
<method selector='bk_all:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_any:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_apply:'>
<arg declared_type='void (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_corresponds:withBlock:'>
<arg declared_type='NSArray*' index='0' name='list' type='@'/>
<arg declared_type='BOOL (^)(id, id)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_each:'>
<arg declared_type='void (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_map:'>
<arg declared_type='id (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bk_match:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_none:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_reduce:withBlock:'>
<arg declared_type='id' index='0' name='initial' type='@'/>
<arg declared_type='id (^)(id, id)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_reduceFloat:withBlock:'>
<arg declared_type='CGFloat' index='0' name='inital' type='f'/>
<arg declared_type='CGFloat (^)(CGFloat, id)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='CGFloat' type='f'/>
<arg declared_type='id' type='@'/>
<retval declared_type='CGFloat' type='f'/>
</arg>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='bk_reduceInteger:withBlock:'>
<arg declared_type='NSInteger' index='0' name='initial' type='i'/>
<arg declared_type='NSInteger (^)(NSInteger, id)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='NSInteger' type='i'/>
<arg declared_type='id' type='@'/>
<retval declared_type='NSInteger' type='i'/>
</arg>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='bk_reject:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bk_select:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSCache'>
<method selector='bk_objectForKey:withGetter:'>
<arg declared_type='id' index='0' name='key' type='@'/>
<arg declared_type='id (^)(void)' function_pointer='true' index='1' name='getterBlock' type='@?'>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_setWillEvictBlock:'>
<arg declared_type='void (^)(NSCache *, id)' function_pointer='true' index='0' name='bk_willEvictBlock' type='@?'>
<arg declared_type='NSCache*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_willEvictBlock'>
<retval declared_type='void (^)(NSCache *, id)' function_pointer='true' type='@?'>
<arg declared_type='NSCache*' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
</class>
<class name='NSData'>
<method class_method='true' selector='contentTypeForImageData:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSDictionary'>
<method selector='bk_all:'>
<arg declared_type='BOOL (^)(id, id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_any:'>
<arg declared_type='BOOL (^)(id, id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_apply:'>
<arg declared_type='void (^)(id, id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_each:'>
<arg declared_type='void (^)(id, id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_map:'>
<arg declared_type='id (^)(id, id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='bk_match:'>
<arg declared_type='BOOL (^)(id, id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_none:'>
<arg declared_type='BOOL (^)(id, id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_reject:'>
<arg declared_type='BOOL (^)(id, id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='bk_select:'>
<arg declared_type='BOOL (^)(id, id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='NSIndexSet'>
<method selector='bk_all:'>
<arg declared_type='BOOL (^)(NSUInteger)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_any:'>
<arg declared_type='BOOL (^)(NSUInteger)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_apply:'>
<arg declared_type='void (^)(NSUInteger)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_each:'>
<arg declared_type='void (^)(NSUInteger)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_map:'>
<arg declared_type='NSUInteger (^)(NSUInteger)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='NSUInteger' type='I'/>
</arg>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='bk_mapIndex:'>
<arg declared_type='id (^)(NSUInteger)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bk_match:'>
<arg declared_type='BOOL (^)(NSUInteger)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='bk_none:'>
<arg declared_type='BOOL (^)(NSUInteger)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_reject:'>
<arg declared_type='BOOL (^)(NSUInteger)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
<method selector='bk_select:'>
<arg declared_type='BOOL (^)(NSUInteger)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='NSIndexSet*' type='@'/>
</method>
</class>
<class name='NSInvocation'>
<method class_method='true' selector='bk_invocationWithTarget:block:'>
<arg declared_type='id' index='0' name='target' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSInvocation*' type='@'/>
</method>
</class>
<class name='NSMutableArray'>
<method selector='bk_performMap:'>
<arg declared_type='id (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_performReject:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_performSelect:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableDictionary'>
<method selector='bk_performMap:'>
<arg declared_type='id (^)(id, id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_performReject:'>
<arg declared_type='BOOL (^)(id, id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_performSelect:'>
<arg declared_type='BOOL (^)(id, id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableIndexSet'>
<method selector='bk_performMap:'>
<arg declared_type='NSUInteger (^)(NSUInteger)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='NSUInteger' type='I'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_performReject:'>
<arg declared_type='BOOL (^)(NSUInteger)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_performSelect:'>
<arg declared_type='BOOL (^)(NSUInteger)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableOrderedSet'>
<method selector='bk_performMap:'>
<arg declared_type='id (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_performReject:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_performSelect:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSMutableSet'>
<method selector='bk_performMap:'>
<arg declared_type='id (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_performReject:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_performSelect:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='appendPartWithFileData:name:fileName:mimeType:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<arg declared_type='NSError**' index='4' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:'>
<arg declared_type='NSDictionary*' index='0' name='headers' type='@'/>
<arg declared_type='NSData*' index='1' name='body' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:'>
<arg declared_type='NSInputStream*' index='0' name='inputStream' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='int64_t' index='3' name='length' type='q'/>
<arg declared_type='NSString*' index='4' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_addObserverForKeyPath:identifier:options:task:'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='NSString*' index='1' name='token' type='@'/>
<arg declared_type='NSKeyValueObservingOptions' index='2' name='options' type='I'/>
<arg declared_type='void (^)(id, NSDictionary *)' function_pointer='true' index='3' name='task' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_addObserverForKeyPath:options:task:'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='NSKeyValueObservingOptions' index='1' name='options' type='I'/>
<arg declared_type='void (^)(id, NSDictionary *)' function_pointer='true' index='2' name='task' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='bk_addObserverForKeyPath:task:'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='1' name='task' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='bk_addObserverForKeyPaths:identifier:options:task:'>
<arg declared_type='NSArray*' index='0' name='keyPaths' type='@'/>
<arg declared_type='NSString*' index='1' name='token' type='@'/>
<arg declared_type='NSKeyValueObservingOptions' index='2' name='options' type='I'/>
<arg declared_type='void (^)(id, NSString *, NSDictionary *)' function_pointer='true' index='3' name='task' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='NSString*' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_addObserverForKeyPaths:options:task:'>
<arg declared_type='NSArray*' index='0' name='keyPaths' type='@'/>
<arg declared_type='NSKeyValueObservingOptions' index='1' name='options' type='I'/>
<arg declared_type='void (^)(id, NSString *, NSDictionary *)' function_pointer='true' index='2' name='task' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='NSString*' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='bk_addObserverForKeyPaths:task:'>
<arg declared_type='NSArray*' index='0' name='keyPaths' type='@'/>
<arg declared_type='void (^)(id, NSDictionary *)' function_pointer='true' index='1' name='task' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='bk_associateCopyOfValue:withKey:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_associateCopyOfValue:withKey:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_associateValue:withKey:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_associateValue:withKey:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_associatedValueForKey:'>
<arg const='true' declared_type='void*' index='0' name='key' type='^v'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_associatedValueForKey:'>
<arg const='true' declared_type='void*' index='0' name='key' type='^v'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bk_atomicallyAssociateCopyOfValue:withKey:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_atomicallyAssociateCopyOfValue:withKey:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_atomicallyAssociateValue:withKey:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_atomicallyAssociateValue:withKey:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_cancelBlock:'>
<arg declared_type='id' index='0' name='block' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_dynamicDataSource'>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_dynamicDelegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_dynamicDelegateForProtocol:'>
<arg declared_type='Protocol*' index='0' name='protocol' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bk_linkDataSourceMethods:'>
<arg declared_type='NSDictionary*' index='0' name='selectorsForPropertyNames' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_linkDelegateMethods:'>
<arg declared_type='NSDictionary*' index='0' name='selectorsForPropertyNames' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_linkProtocol:methods:'>
<arg declared_type='Protocol*' index='0' name='protocol' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='selectorsForPropertyNames' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_performBlock:afterDelay:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_performBlock:afterDelay:'>
<arg declared_type='void (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bk_registerDynamicDataSource'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_registerDynamicDataSourceNamed:'>
<arg declared_type='NSString*' index='0' name='dataSourceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_registerDynamicDelegate'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_registerDynamicDelegateNamed:'>
<arg declared_type='NSString*' index='0' name='delegateName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_registerDynamicDelegateNamed:forProtocol:'>
<arg declared_type='NSString*' index='0' name='delegateName' type='@'/>
<arg declared_type='Protocol*' index='1' name='protocol' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_removeAllAssociatedObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_removeAllAssociatedObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_removeAllBlockObservers'>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_removeObserverForKeyPath:identifier:'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='NSString*' index='1' name='token' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_removeObserversWithIdentifier:'>
<arg declared_type='NSString*' index='0' name='token' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_weaklyAssociateValue:withKey:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_weaklyAssociateValue:withKey:'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cacheImage:forRequest:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSURLRequest*' index='1' name='request' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cachedImageForRequest:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='hudWasHidden:'>
<arg declared_type='MBProgressHUD*' index='0' name='hud' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageManager:shouldDownloadImageForURL:'>
<arg declared_type='SDWebImageManager*' index='0' name='imageManager' type='@'/>
<arg declared_type='NSURL*' index='1' name='imageURL' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imageManager:transformDownloadedImage:withURL:'>
<arg declared_type='SDWebImageManager*' index='0' name='imageManager' type='@'/>
<arg declared_type='UIImage*' index='1' name='image' type='@'/>
<arg declared_type='NSURL*' index='2' name='imageURL' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='imagePrefetcher:didFinishWithTotalCount:skippedCount:'>
<arg declared_type='SDWebImagePrefetcher*' index='0' name='imagePrefetcher' type='@'/>
<arg declared_type='NSUInteger' index='1' name='totalCount' type='I'/>
<arg declared_type='NSUInteger' index='2' name='skippedCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imagePrefetcher:didPrefetchURL:finishedCount:totalCount:'>
<arg declared_type='SDWebImagePrefetcher*' index='0' name='imagePrefetcher' type='@'/>
<arg declared_type='NSURL*' index='1' name='imageURL' type='@'/>
<arg declared_type='NSUInteger' index='2' name='finishedCount' type='I'/>
<arg declared_type='NSUInteger' index='3' name='totalCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestBySerializingRequest:withParameters:error:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='responseObjectForResponse:data:error:'>
<arg declared_type='NSURLResponse*' index='0' name='response' type='@'/>
<arg declared_type='NSData*' index='1' name='data' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:'>
<arg declared_type='NSUInteger' index='0' name='numberOfBytes' type='I'/>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSOrderedSet'>
<method selector='bk_all:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_any:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_apply:'>
<arg declared_type='void (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_corresponds:withBlock:'>
<arg declared_type='NSOrderedSet*' index='0' name='list' type='@'/>
<arg declared_type='BOOL (^)(id, id)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_each:'>
<arg declared_type='void (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_map:'>
<arg declared_type='id (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='NSOrderedSet*' type='@'/>
</method>
<method selector='bk_match:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_none:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_reduce:withBlock:'>
<arg declared_type='id' index='0' name='initial' type='@'/>
<arg declared_type='id (^)(id, id)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_reject:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='NSOrderedSet*' type='@'/>
</method>
<method selector='bk_select:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='NSOrderedSet*' type='@'/>
</method>
</class>
<class name='NSSet'>
<method selector='bk_all:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_any:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_apply:'>
<arg declared_type='void (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_each:'>
<arg declared_type='void (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_map:'>
<arg declared_type='id (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='bk_match:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_none:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_reduce:withBlock:'>
<arg declared_type='id' index='0' name='initial' type='@'/>
<arg declared_type='id (^)(id, id)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_reject:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='bk_select:'>
<arg declared_type='BOOL (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='NSSet*' type='@'/>
</method>
</class>
<class name='NSTimer'>
<method class_method='true' selector='bk_scheduledTimerWithTimeInterval:block:repeats:'>
<arg declared_type='NSTimeInterval' index='0' name='inTimeInterval' type='d'/>
<arg declared_type='void (^)(NSTimer *)' function_pointer='true' index='1' name='inBlock' type='@?'>
<arg declared_type='NSTimer*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='BOOL' index='2' name='inRepeats' type='B'/>
<retval declared_type='NSTimer*' type='@'/>
</method>
<method class_method='true' selector='bk_timerWithTimeInterval:block:repeats:'>
<arg declared_type='NSTimeInterval' index='0' name='inTimeInterval' type='d'/>
<arg declared_type='void (^)(NSTimer *)' function_pointer='true' index='1' name='inBlock' type='@?'>
<arg declared_type='NSTimer*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='BOOL' index='2' name='inRepeats' type='B'/>
<retval declared_type='NSTimer*' type='@'/>
</method>
</class>
<class name='NSURLConnection'>
<method class_method='true' selector='bk_connectionWithRequest:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<retval declared_type='NSURLConnection*' type='@'/>
</method>
<method selector='bk_downloadBlock'>
<retval declared_type='void (^)(double)' function_pointer='true' type='@?'>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_failureBlock'>
<retval declared_type='void (^)(NSURLConnection *, NSError *)' function_pointer='true' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_initWithRequest:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_initWithRequest:completionHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='void (^)(NSURLConnection *, NSURLResponse *, NSData *)' function_pointer='true' index='1' name='block' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_responseBlock'>
<retval declared_type='void (^)(NSURLConnection *, NSURLResponse *)' function_pointer='true' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_setDownloadBlock:'>
<arg declared_type='void (^)(double)' function_pointer='true' index='0' name='bk_downloadBlock' type='@?'>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setFailureBlock:'>
<arg declared_type='void (^)(NSURLConnection *, NSError *)' function_pointer='true' index='0' name='bk_failureBlock' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setResponseBlock:'>
<arg declared_type='void (^)(NSURLConnection *, NSURLResponse *)' function_pointer='true' index='0' name='bk_responseBlock' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setSuccessBlock:'>
<arg declared_type='void (^)(NSURLConnection *, NSURLResponse *, NSData *)' function_pointer='true' index='0' name='bk_successBlock' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setUploadBlock:'>
<arg declared_type='void (^)(double)' function_pointer='true' index='0' name='bk_uploadBlock' type='@?'>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_startConnectionWithRequest:successHandler:failureHandler:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='void (^)(NSURLConnection *, NSURLResponse *, NSData *)' function_pointer='true' index='1' name='success' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLConnection *, NSError *)' function_pointer='true' index='2' name='failure' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSURLConnection*' type='@'/>
</method>
<method selector='bk_startWithCompletionBlock:'>
<arg declared_type='void (^)(NSURLConnection *, NSURLResponse *, NSData *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_successBlock'>
<retval declared_type='void (^)(NSURLConnection *, NSURLResponse *, NSData *)' function_pointer='true' type='@?'>
<arg declared_type='NSURLConnection*' type='@'/>
<arg declared_type='NSURLResponse*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_uploadBlock'>
<retval declared_type='void (^)(double)' function_pointer='true' type='@?'>
<arg declared_type='double' type='d'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NZCircularImageView'>
<method selector='borderColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='borderWidth'>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='setBorderColor:'>
<arg declared_type='UIColor*' index='0' name='borderColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderWidth:'>
<arg declared_type='NSNumber*' index='0' name='borderWidth' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithResizeURL:'>
<arg declared_type='NSString*' index='0' name='stringUrl' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithResizeURL:usingActivityIndicatorStyle:'>
<arg declared_type='NSString*' index='0' name='stringUrl' type='@'/>
<arg declared_type='UIActivityIndicatorViewStyle' index='1' name='activityStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithResizeURL:usingActivityIndicatorStyle:completed:'>
<arg declared_type='NSString*' index='0' name='stringUrl' type='@'/>
<arg declared_type='UIActivityIndicatorViewStyle' index='1' name='activityStyle' type='i'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='2' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='REMenu'>
<method selector='animationDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='appearsBehindNavigationBar'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='backgroundAlpha'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='backgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='backgroundView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='badgeLabelConfigurationBlock'>
<retval declared_type='void (^)(UILabel *, REMenuItem *)' function_pointer='true' type='@?'>
<arg declared_type='UILabel*' type='@'/>
<arg declared_type='REMenuItem*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='borderColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='borderWidth'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='bounce'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bounceAnimationDuration'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='close'>
<retval declared_type='void' type='v'/>
</method>
<method selector='closeCompletionHandler'>
<retval declared_type='void (^)(void)' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='closeOnSelection'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='closePreparationBlock'>
<retval declared_type='void (^)(void)' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='closeWithCompletion:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='cornerRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='font'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='highlightedBackgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='highlightedImageTintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='highlightedSeparatorColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='highlightedTextColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='highlightedTextShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='highlightedTextShadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='imageAlignment'>
<retval declared_type='REMenuImageAlignment' type='i'/>
</method>
<method selector='imageOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='imageTintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='initWithItems:'>
<arg declared_type='NSArray*' index='0' name='items' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAnimating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isOpen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='itemHeight'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='items'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='liveBlur'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='liveBlurBackgroundStyle'>
<retval declared_type='REMenuLiveBackgroundStyle' type='i'/>
</method>
<method selector='liveBlurTintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='separatorColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='separatorHeight'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='setAnimationDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='animationDuration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAppearsBehindNavigationBar:'>
<arg declared_type='BOOL' index='0' name='appearsBehindNavigationBar' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundAlpha:'>
<arg declared_type='CGFloat' index='0' name='backgroundAlpha' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='UIColor*' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundView:'>
<arg declared_type='UIView*' index='0' name='backgroundView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadgeLabelConfigurationBlock:'>
<arg declared_type='void (^)(UILabel *, REMenuItem *)' function_pointer='true' index='0' name='badgeLabelConfigurationBlock' type='@?'>
<arg declared_type='UILabel*' type='@'/>
<arg declared_type='REMenuItem*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderColor:'>
<arg declared_type='UIColor*' index='0' name='borderColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBorderWidth:'>
<arg declared_type='CGFloat' index='0' name='borderWidth' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBounce:'>
<arg declared_type='BOOL' index='0' name='bounce' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBounceAnimationDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='bounceAnimationDuration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCloseCompletionHandler:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='closeCompletionHandler' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCloseOnSelection:'>
<arg declared_type='BOOL' index='0' name='closeOnSelection' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setClosePreparationBlock:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='closePreparationBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCornerRadius:'>
<arg declared_type='CGFloat' index='0' name='cornerRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='UIFont*' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedBackgroundColor:'>
<arg declared_type='UIColor*' index='0' name='highlightedBackgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedImageTintColor:'>
<arg declared_type='UIColor*' index='0' name='highlightedImageTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedSeparatorColor:'>
<arg declared_type='UIColor*' index='0' name='highlightedSeparatorColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedTextColor:'>
<arg declared_type='UIColor*' index='0' name='highlightedTextColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedTextShadowColor:'>
<arg declared_type='UIColor*' index='0' name='highlightedTextShadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedTextShadowOffset:'>
<arg declared_type='CGSize' index='0' name='highlightedTextShadowOffset' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageAlignment:'>
<arg declared_type='REMenuImageAlignment' index='0' name='imageAlignment' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageOffset:'>
<arg declared_type='CGSize' index='0' name='imageOffset' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageTintColor:'>
<arg declared_type='UIColor*' index='0' name='imageTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItemHeight:'>
<arg declared_type='CGFloat' index='0' name='itemHeight' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItems:'>
<arg declared_type='NSArray*' index='0' name='items' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLiveBlur:'>
<arg declared_type='BOOL' index='0' name='liveBlur' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLiveBlurBackgroundStyle:'>
<arg declared_type='REMenuLiveBackgroundStyle' index='0' name='liveBlurBackgroundStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLiveBlurTintColor:'>
<arg declared_type='UIColor*' index='0' name='liveBlurTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsLayout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeparatorColor:'>
<arg declared_type='UIColor*' index='0' name='separatorColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeparatorHeight:'>
<arg declared_type='CGFloat' index='0' name='separatorHeight' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowColor:'>
<arg declared_type='UIColor*' index='0' name='shadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowOffset:'>
<arg declared_type='CGSize' index='0' name='shadowOffset' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowOpacity:'>
<arg declared_type='CGFloat' index='0' name='shadowOpacity' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowRadius:'>
<arg declared_type='CGFloat' index='0' name='shadowRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleFont:'>
<arg declared_type='UIFont*' index='0' name='subtitleFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleHighlightedTextColor:'>
<arg declared_type='UIColor*' index='0' name='subtitleHighlightedTextColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleHighlightedTextShadowColor:'>
<arg declared_type='UIColor*' index='0' name='subtitleHighlightedTextShadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleHighlightedTextShadowOffset:'>
<arg declared_type='CGSize' index='0' name='subtitleHighlightedTextShadowOffset' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleTextAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='subtitleTextAlignment' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleTextColor:'>
<arg declared_type='UIColor*' index='0' name='subtitleTextColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleTextOffset:'>
<arg declared_type='CGSize' index='0' name='subtitleTextOffset' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleTextShadowColor:'>
<arg declared_type='UIColor*' index='0' name='subtitleTextShadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleTextShadowOffset:'>
<arg declared_type='CGSize' index='0' name='subtitleTextShadowOffset' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='textAlignment' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='UIColor*' index='0' name='textColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextOffset:'>
<arg declared_type='CGSize' index='0' name='textOffset' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextShadowColor:'>
<arg declared_type='UIColor*' index='0' name='textShadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextShadowOffset:'>
<arg declared_type='CGSize' index='0' name='textShadowOffset' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWaitUntilAnimationIsComplete:'>
<arg declared_type='BOOL' index='0' name='waitUntilAnimationIsComplete' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='shadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='shadowOpacity'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='shadowRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='showFromNavigationController:'>
<arg declared_type='UINavigationController*' index='0' name='navigationController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showFromRect:inView:'>
<arg declared_type='CGRect' index='0' name='rect' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='UIView*' index='1' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='showInView:'>
<arg declared_type='UIView*' index='0' name='view' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subtitleFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='subtitleHighlightedTextColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='subtitleHighlightedTextShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='subtitleHighlightedTextShadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='subtitleTextAlignment'>
<retval declared_type='NSTextAlignment' type='i'/>
</method>
<method selector='subtitleTextColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='subtitleTextOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='subtitleTextShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='subtitleTextShadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='textAlignment'>
<retval declared_type='NSTextAlignment' type='i'/>
</method>
<method selector='textColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='textOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='textShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='textShadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='waitUntilAnimationIsComplete'>
<retval declared_type='BOOL' type='B'/>
</method>
</class>
<class name='REMenuContainerView'>
<method selector='appearsBehindNavigationBar'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='navigationBar'>
<retval declared_type='UINavigationBar*' type='@'/>
</method>
<method selector='setAppearsBehindNavigationBar:'>
<arg declared_type='BOOL' index='0' name='appearsBehindNavigationBar' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNavigationBar:'>
<arg declared_type='UINavigationBar*' index='0' name='navigationBar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='REMenuItem'>
<method selector='action'>
<retval declared_type='void (^)(REMenuItem *)' function_pointer='true' type='@?'>
<arg declared_type='REMenuItem*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='backgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='badge'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='customView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='font'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='highlightedBackgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='highlightedSeparatorColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='highlightedTextColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='highlightedTextShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='highlightedTextShadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='higlightedImage'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='image'>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='initWithCustomView:'>
<arg declared_type='UIView*' index='0' name='customView' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithCustomView:action:'>
<arg declared_type='UIView*' index='0' name='customView' type='@'/>
<arg declared_type='void (^)(REMenuItem *)' function_pointer='true' index='1' name='action' type='@?'>
<arg declared_type='REMenuItem*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTitle:image:highlightedImage:action:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='UIImage*' index='1' name='image' type='@'/>
<arg declared_type='UIImage*' index='2' name='higlightedImage' type='@'/>
<arg declared_type='void (^)(REMenuItem *)' function_pointer='true' index='3' name='action' type='@?'>
<arg declared_type='REMenuItem*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithTitle:subtitle:image:highlightedImage:action:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='NSString*' index='1' name='subtitle' type='@'/>
<arg declared_type='UIImage*' index='2' name='image' type='@'/>
<arg declared_type='UIImage*' index='3' name='higlightedImage' type='@'/>
<arg declared_type='void (^)(REMenuItem *)' function_pointer='true' index='4' name='action' type='@?'>
<arg declared_type='REMenuItem*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='separatorColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='setAction:'>
<arg declared_type='void (^)(REMenuItem *)' function_pointer='true' index='0' name='action' type='@?'>
<arg declared_type='REMenuItem*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundColor:'>
<arg declared_type='UIColor*' index='0' name='backgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBadge:'>
<arg declared_type='NSString*' index='0' name='badge' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCustomView:'>
<arg declared_type='UIView*' index='0' name='customView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFont:'>
<arg declared_type='UIFont*' index='0' name='font' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedBackgroundColor:'>
<arg declared_type='UIColor*' index='0' name='highlightedBackgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedSeparatorColor:'>
<arg declared_type='UIColor*' index='0' name='highlightedSeparatorColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedTextColor:'>
<arg declared_type='UIColor*' index='0' name='highlightedTextColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedTextShadowColor:'>
<arg declared_type='UIColor*' index='0' name='highlightedTextShadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHighlightedTextShadowOffset:'>
<arg declared_type='CGSize' index='0' name='highlightedTextShadowOffset' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHiglightedImage:'>
<arg declared_type='UIImage*' index='0' name='higlightedImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImage:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNeedsLayout'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeparatorColor:'>
<arg declared_type='UIColor*' index='0' name='separatorColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitle:'>
<arg declared_type='NSString*' index='0' name='subtitle' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleFont:'>
<arg declared_type='UIFont*' index='0' name='subtitleFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleHighlightedTextColor:'>
<arg declared_type='UIColor*' index='0' name='subtitleHighlightedTextColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleHighlightedTextShadowColor:'>
<arg declared_type='UIColor*' index='0' name='subtitleHighlightedTextShadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleHighlightedTextShadowOffset:'>
<arg declared_type='CGSize' index='0' name='subtitleHighlightedTextShadowOffset' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleTextAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='subtitleTextAlignment' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleTextColor:'>
<arg declared_type='UIColor*' index='0' name='subtitleTextColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleTextOffset:'>
<arg declared_type='CGSize' index='0' name='subtitleTextOffset' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleTextShadowColor:'>
<arg declared_type='UIColor*' index='0' name='subtitleTextShadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleTextShadowOffset:'>
<arg declared_type='CGSize' index='0' name='subtitleTextShadowOffset' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTag:'>
<arg declared_type='NSInteger' index='0' name='tag' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextAlignment:'>
<arg declared_type='NSTextAlignment' index='0' name='textAlignment' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextColor:'>
<arg declared_type='UIColor*' index='0' name='textColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextOffset:'>
<arg declared_type='CGSize' index='0' name='textOffset' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextShadowColor:'>
<arg declared_type='UIColor*' index='0' name='textShadowColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTextShadowOffset:'>
<arg declared_type='CGSize' index='0' name='textShadowOffset' type='{CGSize=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subtitle'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='subtitleFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='subtitleHighlightedTextColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='subtitleHighlightedTextShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='subtitleHighlightedTextShadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='subtitleTextAlignment'>
<retval declared_type='NSTextAlignment' type='i'/>
</method>
<method selector='subtitleTextColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='subtitleTextOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='subtitleTextShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='subtitleTextShadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='tag'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='textAlignment'>
<retval declared_type='NSTextAlignment' type='i'/>
</method>
<method selector='textColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='textOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='textShadowColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='textShadowOffset'>
<retval declared_type='CGSize' type='{CGSize=ff}'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='REMenuItemView'>
<method selector='badgeLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
<method selector='imageView'>
<retval declared_type='UIImageView*' type='@'/>
</method>
<method selector='initWithFrame:menu:item:hasSubtitle:'>
<arg declared_type='CGRect' index='0' name='frame' type='{CGRect={CGPoint=ff}{CGSize=ff}}'/>
<arg declared_type='REMenu*' index='1' name='menu' type='@'/>
<arg declared_type='REMenuItem*' index='2' name='item' type='@'/>
<arg declared_type='BOOL' index='3' name='hasSubtitle' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='item'>
<retval declared_type='REMenuItem*' type='@'/>
</method>
<method selector='menu'>
<retval declared_type='REMenu*' type='@'/>
</method>
<method selector='separatorView'>
<retval declared_type='UIView*' type='@'/>
</method>
<method selector='setBadgeLabel:'>
<arg declared_type='UILabel*' index='0' name='badgeLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageView:'>
<arg declared_type='UIImageView*' index='0' name='imageView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setItem:'>
<arg declared_type='REMenuItem*' index='0' name='item' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMenu:'>
<arg declared_type='REMenu*' index='0' name='menu' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSeparatorView:'>
<arg declared_type='UIView*' index='0' name='separatorView' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSubtitleLabel:'>
<arg declared_type='UILabel*' index='0' name='subtitleLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleLabel:'>
<arg declared_type='UILabel*' index='0' name='titleLabel' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='subtitleLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
<method selector='titleLabel'>
<retval declared_type='UILabel*' type='@'/>
</method>
</class>
<class name='RTSpinKitView'>
<method selector='color'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='hidesWhenStopped'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithStyle:'>
<arg declared_type='RTSpinKitViewStyle' index='0' name='style' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithStyle:color:'>
<arg declared_type='RTSpinKitViewStyle' index='0' name='style' type='i'/>
<arg declared_type='UIColor*' index='1' name='color' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAnimating'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setColor:'>
<arg declared_type='UIColor*' index='0' name='color' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHidesWhenStopped:'>
<arg declared_type='BOOL' index='0' name='hidesWhenStopped' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startAnimating'>
<retval declared_type='void' type='v'/>
</method>
<method selector='stopAnimating'>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SDImageCache'>
<method selector='addReadOnlyCachePath:'>
<arg declared_type='NSString*' index='0' name='path' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='calculateSizeWithCompletionBlock:'>
<arg declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true' index='0' name='completionBlock' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='cleanDisk'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cleanDiskWithCompletionBlock:'>
<arg declared_type='void (^)()' function_pointer='true' index='0' name='completionBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearDisk'>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearDiskOnCompletion:'>
<arg declared_type='void (^)()' function_pointer='true' index='0' name='completion' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='clearMemory'>
<retval declared_type='void' type='v'/>
</method>
<method selector='diskImageExistsWithKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='getDiskCount'>
<retval declared_type='int' type='i'/>
</method>
<method selector='getSize'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='imageFromDiskCacheForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='imageFromMemoryCacheForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='initWithNamespace:'>
<arg declared_type='NSString*' index='0' name='ns' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='maxCacheAge'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='maxCacheSize'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='maxMemoryCost'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='queryDiskCacheForKey:done:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='SDWebImageQueryCompletedBlock' function_pointer='true' index='1' name='doneBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSOperation*' type='@'/>
</method>
<method selector='removeImageForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeImageForKey:fromDisk:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<arg declared_type='BOOL' index='1' name='fromDisk' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxCacheAge:'>
<arg declared_type='NSInteger' index='0' name='maxCacheAge' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxCacheSize:'>
<arg declared_type='NSUInteger' index='0' name='maxCacheSize' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxMemoryCost:'>
<arg declared_type='NSUInteger' index='0' name='maxMemoryCost' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedImageCache'>
<retval declared_type='SDImageCache*' type='@'/>
</method>
<method selector='storeImage:forKey:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storeImage:forKey:toDisk:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<arg declared_type='BOOL' index='2' name='toDisk' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='storeImage:recalculateFromImage:imageData:forKey:toDisk:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='BOOL' index='1' name='recalculate' type='B'/>
<arg declared_type='NSData*' index='2' name='imageData' type='@'/>
<arg declared_type='NSString*' index='3' name='key' type='@'/>
<arg declared_type='BOOL' index='4' name='toDisk' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SDWebImageDownloader'>
<method selector='currentDownloadCount'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='downloadImageWithURL:options:progress:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='SDWebImageDownloaderOptions' index='1' name='options' type='I'/>
<arg declared_type='SDWebImageDownloaderProgressBlock' function_pointer='true' index='2' name='progressBlock' type='@?'>
<arg declared_type='NSInteger' type='i'/>
<arg declared_type='NSInteger' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='SDWebImageDownloaderCompletedBlock' function_pointer='true' index='3' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='downloadTimeout'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='executionOrder'>
<retval declared_type='SDWebImageDownloaderExecutionOrder' type='i'/>
</method>
<method selector='headersFilter'>
<retval declared_type='NSDictionary *(^)(NSURL *, NSDictionary *)' function_pointer='true' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</retval>
</method>
<method selector='maxConcurrentDownloads'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='setDownloadTimeout:'>
<arg declared_type='NSTimeInterval' index='0' name='downloadTimeout' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExecutionOrder:'>
<arg declared_type='SDWebImageDownloaderExecutionOrder' index='0' name='executionOrder' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHeadersFilter:'>
<arg declared_type='NSDictionary *(^)(NSURL *, NSDictionary *)' function_pointer='true' index='0' name='headersFilter' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxConcurrentDownloads:'>
<arg declared_type='NSInteger' index='0' name='maxConcurrentDownloads' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:forHTTPHeaderField:'>
<arg declared_type='NSString*' index='0' name='value' type='@'/>
<arg declared_type='NSString*' index='1' name='field' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedDownloader'>
<retval declared_type='SDWebImageDownloader*' type='@'/>
</method>
<method selector='valueForHTTPHeaderField:'>
<arg declared_type='NSString*' index='0' name='field' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='SDWebImageDownloaderOperation'>
<method selector='initWithRequest:options:progress:completed:cancelled:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='SDWebImageDownloaderOptions' index='1' name='options' type='I'/>
<arg declared_type='SDWebImageDownloaderProgressBlock' function_pointer='true' index='2' name='progressBlock' type='@?'>
<arg declared_type='NSInteger' type='i'/>
<arg declared_type='NSInteger' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='SDWebImageDownloaderCompletedBlock' function_pointer='true' index='3' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)()' function_pointer='true' index='4' name='cancelBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='options'>
<retval declared_type='SDWebImageDownloaderOptions' type='I'/>
</method>
<method selector='request'>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
<method selector='setRequest:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SDWebImageManager'>
<method selector='cacheKeyFilter'>
<retval declared_type='NSString *(^)(NSURL *)' function_pointer='true' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</retval>
</method>
<method selector='cancelAll'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='diskImageExistsForURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='downloadWithURL:options:progress:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='SDWebImageOptions' index='1' name='options' type='I'/>
<arg declared_type='SDWebImageDownloaderProgressBlock' function_pointer='true' index='2' name='progressBlock' type='@?'>
<arg declared_type='NSInteger' type='i'/>
<arg declared_type='NSInteger' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='SDWebImageCompletedWithFinishedBlock' function_pointer='true' index='3' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='imageCache'>
<retval declared_type='SDImageCache*' type='@'/>
</method>
<method selector='imageDownloader'>
<retval declared_type='SDWebImageDownloader*' type='@'/>
</method>
<method selector='isRunning'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setCacheKeyFilter:'>
<arg declared_type='NSString *(^)(NSURL *)' function_pointer='true' index='0' name='cacheKeyFilter' type='@?'>
<arg declared_type='NSURL*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageCache:'>
<arg declared_type='SDImageCache*' index='0' name='imageCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageDownloader:'>
<arg declared_type='SDWebImageDownloader*' index='0' name='imageDownloader' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedManager'>
<retval declared_type='SDWebImageManager*' type='@'/>
</method>
</class>
<class name='SDWebImagePrefetcher'>
<method selector='cancelPrefetching'>
<retval declared_type='void' type='v'/>
</method>
<method selector='delegate'>
<retval declared_type='id' type='@'/>
</method>
<method selector='maxConcurrentDownloads'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='options'>
<retval declared_type='SDWebImageOptions' type='I'/>
</method>
<method selector='prefetchURLs:'>
<arg declared_type='NSArray*' index='0' name='urls' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='prefetchURLs:progress:completed:'>
<arg declared_type='NSArray*' index='0' name='urls' type='@'/>
<arg declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true' index='1' name='progressBlock' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSUInteger, NSUInteger)' function_pointer='true' index='2' name='completionBlock' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='NSUInteger' type='I'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDelegate:'>
<arg declared_type='id' index='0' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMaxConcurrentDownloads:'>
<arg declared_type='NSUInteger' index='0' name='maxConcurrentDownloads' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setOptions:'>
<arg declared_type='SDWebImageOptions' index='0' name='options' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedImagePrefetcher'>
<retval declared_type='SDWebImagePrefetcher*' type='@'/>
</method>
</class>
<class name='SIAlertView'>
<method selector='addButtonWithTitle:type:handler:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='SIAlertViewButtonType' index='1' name='type' type='i'/>
<arg declared_type='SIAlertViewHandler' function_pointer='true' index='2' name='handler' type='@?'>
<arg declared_type='SIAlertView*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='backgroundStyle'>
<retval declared_type='SIAlertViewBackgroundStyle' type='i'/>
</method>
<method selector='buttonColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='buttonFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='buttonsListStyle'>
<retval declared_type='SIAlertViewButtonsListStyle' type='i'/>
</method>
<method selector='cancelButtonColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='cornerRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='destructiveButtonColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='didDismissHandler'>
<retval declared_type='SIAlertViewHandler' function_pointer='true' type='@?'>
<arg declared_type='SIAlertView*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='didShowHandler'>
<retval declared_type='SIAlertViewHandler' function_pointer='true' type='@?'>
<arg declared_type='SIAlertView*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='dismissAnimated:'>
<arg declared_type='BOOL' index='0' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='initWithTitle:andMessage:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='NSString*' index='1' name='message' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='message'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='messageColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='messageFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='setBackgroundStyle:'>
<arg declared_type='SIAlertViewBackgroundStyle' index='0' name='backgroundStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonColor:'>
<arg declared_type='UIColor*' index='0' name='buttonColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonFont:'>
<arg declared_type='UIFont*' index='0' name='buttonFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setButtonsListStyle:'>
<arg declared_type='SIAlertViewButtonsListStyle' index='0' name='buttonsListStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCancelButtonColor:'>
<arg declared_type='UIColor*' index='0' name='cancelButtonColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCancelButtonImage:forState:'>
<arg declared_type='UIImage*' index='0' name='cancelButtonImage' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCornerRadius:'>
<arg declared_type='CGFloat' index='0' name='cornerRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDefaultButtonImage:forState:'>
<arg declared_type='UIImage*' index='0' name='defaultButtonImage' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestructiveButtonColor:'>
<arg declared_type='UIColor*' index='0' name='destructiveButtonColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDestructiveButtonImage:forState:'>
<arg declared_type='UIImage*' index='0' name='destructiveButtonImage' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidDismissHandler:'>
<arg declared_type='SIAlertViewHandler' function_pointer='true' index='0' name='didDismissHandler' type='@?'>
<arg declared_type='SIAlertView*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDidShowHandler:'>
<arg declared_type='SIAlertViewHandler' function_pointer='true' index='0' name='didShowHandler' type='@?'>
<arg declared_type='SIAlertView*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessage:'>
<arg declared_type='NSString*' index='0' name='message' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessageColor:'>
<arg declared_type='UIColor*' index='0' name='messageColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMessageFont:'>
<arg declared_type='UIFont*' index='0' name='messageFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShadowRadius:'>
<arg declared_type='CGFloat' index='0' name='shadowRadius' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleColor:'>
<arg declared_type='UIColor*' index='0' name='titleColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTitleFont:'>
<arg declared_type='UIFont*' index='0' name='titleFont' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTransitionStyle:'>
<arg declared_type='SIAlertViewTransitionStyle' index='0' name='transitionStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setViewBackgroundColor:'>
<arg declared_type='UIColor*' index='0' name='viewBackgroundColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillDismissHandler:'>
<arg declared_type='SIAlertViewHandler' function_pointer='true' index='0' name='willDismissHandler' type='@?'>
<arg declared_type='SIAlertView*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWillShowHandler:'>
<arg declared_type='SIAlertViewHandler' function_pointer='true' index='0' name='willShowHandler' type='@?'>
<arg declared_type='SIAlertView*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='shadowRadius'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='show'>
<retval declared_type='void' type='v'/>
</method>
<method selector='title'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='titleColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='titleFont'>
<retval declared_type='UIFont*' type='@'/>
</method>
<method selector='transitionStyle'>
<retval declared_type='SIAlertViewTransitionStyle' type='i'/>
</method>
<method selector='viewBackgroundColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='willDismissHandler'>
<retval declared_type='SIAlertViewHandler' function_pointer='true' type='@?'>
<arg declared_type='SIAlertView*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='willShowHandler'>
<retval declared_type='SIAlertViewHandler' function_pointer='true' type='@?'>
<arg declared_type='SIAlertView*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
</class>
<class name='SVModalWebViewController'>
<method selector='barsTintColor'>
<retval declared_type='UIColor*' type='@'/>
</method>
<method selector='initWithAddress:'>
<arg declared_type='NSString*' index='0' name='urlString' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='setBarsTintColor:'>
<arg declared_type='UIColor*' index='0' name='barsTintColor' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='SVWebViewController'>
<method selector='initWithAddress:'>
<arg declared_type='NSString*' index='0' name='urlString' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithURL:'>
<arg declared_type='NSURL*' index='0' name='URL' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='SVWebViewControllerActivity'>
<method selector='URLToOpen'>
<retval declared_type='NSURL*' type='@'/>
</method>
<method selector='schemePrefix'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='setSchemePrefix:'>
<arg declared_type='NSString*' index='0' name='schemePrefix' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setURLToOpen:'>
<arg declared_type='NSURL*' index='0' name='URLToOpen' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIActionSheet'>
<method class_method='true' selector='bk_actionSheetWithTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_addButtonWithTitle:handler:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='bk_cancelBlock'>
<retval declared_type='void (^)(void)' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_didDismissBlock'>
<retval declared_type='void (^)(UIActionSheet *, NSInteger)' function_pointer='true' type='@?'>
<arg declared_type='UIActionSheet*' type='@'/>
<arg declared_type='NSInteger' type='i'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_didShowBlock'>
<retval declared_type='void (^)(UIActionSheet *)' function_pointer='true' type='@?'>
<arg declared_type='UIActionSheet*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_handlerForButtonAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i'/>
<retval declared_type='void (^)(void)' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_initWithTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_setCancelBlock:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='bk_cancelBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setCancelButtonWithTitle:handler:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='bk_setDestructiveButtonWithTitle:handler:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='bk_setDidDismissBlock:'>
<arg declared_type='void (^)(UIActionSheet *, NSInteger)' function_pointer='true' index='0' name='bk_didDismissBlock' type='@?'>
<arg declared_type='UIActionSheet*' type='@'/>
<arg declared_type='NSInteger' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setDidShowBlock:'>
<arg declared_type='void (^)(UIActionSheet *)' function_pointer='true' index='0' name='bk_didShowBlock' type='@?'>
<arg declared_type='UIActionSheet*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setHandler:forButtonAtIndex:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSInteger' index='1' name='index' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setWillDismissBlock:'>
<arg declared_type='void (^)(UIActionSheet *, NSInteger)' function_pointer='true' index='0' name='bk_willDismissBlock' type='@?'>
<arg declared_type='UIActionSheet*' type='@'/>
<arg declared_type='NSInteger' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setWillShowBlock:'>
<arg declared_type='void (^)(UIActionSheet *)' function_pointer='true' index='0' name='bk_willShowBlock' type='@?'>
<arg declared_type='UIActionSheet*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_willDismissBlock'>
<retval declared_type='void (^)(UIActionSheet *, NSInteger)' function_pointer='true' type='@?'>
<arg declared_type='UIActionSheet*' type='@'/>
<arg declared_type='NSInteger' type='i'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_willShowBlock'>
<retval declared_type='void (^)(UIActionSheet *)' function_pointer='true' type='@?'>
<arg declared_type='UIActionSheet*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
</class>
<class name='UIActivityIndicatorView'>
<method selector='setAnimatingWithStateOfOperation:'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimatingWithStateOfTask:'>
<arg declared_type='NSURLSessionTask*' index='0' name='task' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIAlertView'>
<method selector='bk_SetShouldEnableFirstOtherButtonBlock:'>
<arg declared_type='BOOL (^)(UIAlertView *)' function_pointer='true' index='0' name='bk_shouldEnableFirstOtherButtonBlock' type='@?'>
<arg declared_type='UIAlertView*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_addButtonWithTitle:handler:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSInteger' type='i'/>
</method>
<method class_method='true' selector='bk_alertViewWithTitle:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bk_alertViewWithTitle:message:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='NSString*' index='1' name='message' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_cancelBlock'>
<retval declared_type='void (^)(void)' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_didDismissBlock'>
<retval declared_type='void (^)(UIAlertView *, NSInteger)' function_pointer='true' type='@?'>
<arg declared_type='UIAlertView*' type='@'/>
<arg declared_type='NSInteger' type='i'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_didShowBlock'>
<retval declared_type='void (^)(UIAlertView *)' function_pointer='true' type='@?'>
<arg declared_type='UIAlertView*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_handlerForButtonAtIndex:'>
<arg declared_type='NSInteger' index='0' name='index' type='i'/>
<retval declared_type='void (^)(void)' function_pointer='true' type='@?'>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_initWithTitle:message:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='NSString*' index='1' name='message' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_setCancelBlock:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='bk_cancelBlock' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setCancelButtonWithTitle:handler:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='1' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='bk_setDidDismissBlock:'>
<arg declared_type='void (^)(UIAlertView *, NSInteger)' function_pointer='true' index='0' name='bk_didDismissBlock' type='@?'>
<arg declared_type='UIAlertView*' type='@'/>
<arg declared_type='NSInteger' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setDidShowBlock:'>
<arg declared_type='void (^)(UIAlertView *)' function_pointer='true' index='0' name='bk_didShowBlock' type='@?'>
<arg declared_type='UIAlertView*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setHandler:forButtonAtIndex:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSInteger' index='1' name='index' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setWillDismissBlock:'>
<arg declared_type='void (^)(UIAlertView *, NSInteger)' function_pointer='true' index='0' name='bk_willDismissBlock' type='@?'>
<arg declared_type='UIAlertView*' type='@'/>
<arg declared_type='NSInteger' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setWillShowBlock:'>
<arg declared_type='void (^)(UIAlertView *)' function_pointer='true' index='0' name='bk_willShowBlock' type='@?'>
<arg declared_type='UIAlertView*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_shouldEnableFirstOtherButtonBlock'>
<retval declared_type='BOOL (^)(UIAlertView *)' function_pointer='true' type='@?'>
<arg declared_type='UIAlertView*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</retval>
</method>
<method class_method='true' selector='bk_showAlertViewWithTitle:message:cancelButtonTitle:otherButtonTitles:handler:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='NSString*' index='1' name='message' type='@'/>
<arg declared_type='NSString*' index='2' name='cancelButtonTitle' type='@'/>
<arg declared_type='NSArray*' index='3' name='otherButtonTitles' type='@'/>
<arg declared_type='void (^)(UIAlertView *, NSInteger)' function_pointer='true' index='4' name='block' type='@?'>
<arg declared_type='UIAlertView*' type='@'/>
<arg declared_type='NSInteger' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_willDismissBlock'>
<retval declared_type='void (^)(UIAlertView *, NSInteger)' function_pointer='true' type='@?'>
<arg declared_type='UIAlertView*' type='@'/>
<arg declared_type='NSInteger' type='i'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_willShowBlock'>
<retval declared_type='void (^)(UIAlertView *)' function_pointer='true' type='@?'>
<arg declared_type='UIAlertView*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method class_method='true' selector='showAlertViewForRequestOperationWithErrorOnCompletion:delegate:'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<arg declared_type='id' index='1' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showAlertViewForRequestOperationWithErrorOnCompletion:delegate:cancelButtonTitle:otherButtonTitles:' sentinel='0' variadic='true'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<arg declared_type='id' index='1' name='delegate' type='@'/>
<arg declared_type='NSString*' index='2' name='cancelButtonTitle' type='@'/>
<arg declared_type='NSString*' index='3' name='otherButtonTitles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showAlertViewForTaskWithErrorOnCompletion:delegate:'>
<arg declared_type='NSURLSessionTask*' index='0' name='task' type='@'/>
<arg declared_type='id' index='1' name='delegate' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showAlertViewForTaskWithErrorOnCompletion:delegate:cancelButtonTitle:otherButtonTitles:' sentinel='0' variadic='true'>
<arg declared_type='NSURLSessionTask*' index='0' name='task' type='@'/>
<arg declared_type='id' index='1' name='delegate' type='@'/>
<arg declared_type='NSString*' index='2' name='cancelButtonTitle' type='@'/>
<arg declared_type='NSString*' index='3' name='otherButtonTitles' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIBarButtonItem'>
<method selector='bk_initWithBarButtonSystemItem:handler:'>
<arg declared_type='UIBarButtonSystemItem' index='0' name='systemItem' type='i'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='1' name='action' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_initWithImage:landscapeImagePhone:style:handler:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='UIImage*' index='1' name='landscapeImagePhone' type='@'/>
<arg declared_type='UIBarButtonItemStyle' index='2' name='style' type='i'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='3' name='action' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_initWithImage:style:handler:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='UIBarButtonItemStyle' index='1' name='style' type='i'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='2' name='action' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_initWithTitle:style:handler:'>
<arg declared_type='NSString*' index='0' name='title' type='@'/>
<arg declared_type='UIBarButtonItemStyle' index='1' name='style' type='i'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='2' name='action' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIButton'>
<method selector='cancelBackgroundImageRequestOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelCurrentImageLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelImageRequestOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageForState:withURL:'>
<arg declared_type='UIControlState' index='0' name='state' type='I'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageForState:withURL:placeholderImage:'>
<arg declared_type='UIControlState' index='0' name='state' type='I'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<arg declared_type='UIImage*' index='2' name='placeholderImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageForState:withURLRequest:placeholderImage:success:failure:'>
<arg declared_type='UIControlState' index='0' name='state' type='I'/>
<arg declared_type='NSURLRequest*' index='1' name='urlRequest' type='@'/>
<arg declared_type='UIImage*' index='2' name='placeholderImage' type='@'/>
<arg declared_type='void (^)(NSHTTPURLResponse *, UIImage *)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:forState:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:forState:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='2' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:forState:placeholderImage:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:forState:placeholderImage:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='3' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:forState:placeholderImage:options:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='3' name='options' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBackgroundImageWithURL:forState:placeholderImage:options:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='3' name='options' type='I'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='4' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageForState:withURL:'>
<arg declared_type='UIControlState' index='0' name='state' type='I'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageForState:withURL:placeholderImage:'>
<arg declared_type='UIControlState' index='0' name='state' type='I'/>
<arg declared_type='NSURL*' index='1' name='url' type='@'/>
<arg declared_type='UIImage*' index='2' name='placeholderImage' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageForState:withURLRequest:placeholderImage:success:failure:'>
<arg declared_type='UIControlState' index='0' name='state' type='I'/>
<arg declared_type='NSURLRequest*' index='1' name='urlRequest' type='@'/>
<arg declared_type='UIImage*' index='2' name='placeholderImage' type='@'/>
<arg declared_type='void (^)(NSHTTPURLResponse *, UIImage *)' function_pointer='true' index='3' name='success' type='@?'>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='4' name='failure' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:forState:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:forState:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='2' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:forState:placeholderImage:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:forState:placeholderImage:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='3' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:forState:placeholderImage:options:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='3' name='options' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:forState:placeholderImage:options:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIControlState' index='1' name='state' type='I'/>
<arg declared_type='UIImage*' index='2' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='3' name='options' type='I'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='4' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIControl'>
<method selector='addEventHandler:forControlEvent:'>
<arg declared_type='UIControlEventHandler' function_pointer='true' index='0' name='handler' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='UIEvent*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='UIControlEvents' index='1' name='controlEvent' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_addEventHandler:forControlEvents:'>
<arg declared_type='void (^)(id)' function_pointer='true' index='0' name='handler' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='UIControlEvents' index='1' name='controlEvents' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_hasEventHandlersForControlEvents:'>
<arg declared_type='UIControlEvents' index='0' name='controlEvents' type='I'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='bk_removeEventHandlersForControlEvents:'>
<arg declared_type='UIControlEvents' index='0' name='controlEvents' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeEventHandlersForControlEvent:'>
<arg declared_type='UIControlEvents' index='0' name='controlEvent' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIGestureRecognizer'>
<method selector='bk_cancel'>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_handler'>
<retval declared_type='void (^)(UIGestureRecognizer *, UIGestureRecognizerState, CGPoint)' function_pointer='true' type='@?'>
<arg declared_type='UIGestureRecognizer*' type='@'/>
<arg declared_type='UIGestureRecognizerState' type='i'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_handlerDelay'>
<retval declared_type='NSTimeInterval' type='d'/>
</method>
<method selector='bk_initWithHandler:'>
<arg declared_type='void (^)(UIGestureRecognizer *, UIGestureRecognizerState, CGPoint)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='UIGestureRecognizer*' type='@'/>
<arg declared_type='UIGestureRecognizerState' type='i'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_initWithHandler:delay:'>
<arg declared_type='void (^)(UIGestureRecognizer *, UIGestureRecognizerState, CGPoint)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='UIGestureRecognizer*' type='@'/>
<arg declared_type='UIGestureRecognizerState' type='i'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bk_recognizerWithHandler:'>
<arg declared_type='void (^)(UIGestureRecognizer *, UIGestureRecognizerState, CGPoint)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='UIGestureRecognizer*' type='@'/>
<arg declared_type='UIGestureRecognizerState' type='i'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bk_recognizerWithHandler:delay:'>
<arg declared_type='void (^)(UIGestureRecognizer *, UIGestureRecognizerState, CGPoint)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='UIGestureRecognizer*' type='@'/>
<arg declared_type='UIGestureRecognizerState' type='i'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_setHandler:'>
<arg declared_type='void (^)(UIGestureRecognizer *, UIGestureRecognizerState, CGPoint)' function_pointer='true' index='0' name='bk_handler' type='@?'>
<arg declared_type='UIGestureRecognizer*' type='@'/>
<arg declared_type='UIGestureRecognizerState' type='i'/>
<arg declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setHandlerDelay:'>
<arg declared_type='NSTimeInterval' index='0' name='bk_handlerDelay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIImage'>
<method class_method='true' selector='decodedImageWithImage:'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method class_method='true' selector='sd_animatedGIFNamed:'>
<arg declared_type='NSString*' index='0' name='name' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method class_method='true' selector='sd_animatedGIFWithData:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method selector='sd_animatedImageByScalingAndCroppingToSize:'>
<arg declared_type='CGSize' index='0' name='size' type='{CGSize=ff}'/>
<retval declared_type='UIImage*' type='@'/>
</method>
<method class_method='true' selector='sd_imageWithData:'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
</class>
<class name='UIImagePickerController'>
<method selector='bk_didCancelBlock'>
<retval declared_type='void (^)(UIImagePickerController *)' function_pointer='true' type='@?'>
<arg declared_type='UIImagePickerController*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_didFinishPickingMediaBlock'>
<retval declared_type='void (^)(UIImagePickerController *, NSDictionary *)' function_pointer='true' type='@?'>
<arg declared_type='UIImagePickerController*' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='setBk_didCancelBlock:'>
<arg declared_type='void (^)(UIImagePickerController *)' function_pointer='true' index='0' name='bk_didCancelBlock' type='@?'>
<arg declared_type='UIImagePickerController*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBk_didFinishPickingMediaBlock:'>
<arg declared_type='void (^)(UIImagePickerController *, NSDictionary *)' function_pointer='true' index='0' name='bk_didFinishPickingMediaBlock' type='@?'>
<arg declared_type='UIImagePickerController*' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIImageView'>
<method selector='activityIndicator'>
<retval declared_type='UIActivityIndicatorView*' type='@'/>
</method>
<method selector='cancelCurrentArrayLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelCurrentImageLoad'>
<retval declared_type='void' type='v'/>
</method>
<method selector='cancelImageRequestOperation'>
<retval declared_type='void' type='v'/>
</method>
<method selector='imageResponseSerializer'>
<retval declared_type='id' type='@'/>
</method>
<method selector='removeActivityIndicator'>
<retval declared_type='void' type='v'/>
</method>
<method selector='setActivityIndicator:'>
<arg declared_type='UIActivityIndicatorView*' index='0' name='activityIndicator' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnimationImagesWithURLs:'>
<arg declared_type='NSArray*' index='0' name='arrayOfURLs' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageResponseSerializer:'>
<arg declared_type='id' index='0' name='imageResponseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='1' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:completed:usingActivityIndicatorStyle:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='1' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='UIActivityIndicatorViewStyle' index='2' name='activityStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='2' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:completed:usingActivityIndicatorStyle:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='2' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='UIActivityIndicatorViewStyle' index='3' name='activityStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:options:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='2' name='options' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:options:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='2' name='options' type='I'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='3' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:options:completed:usingActivityIndicatorStyle:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='2' name='options' type='I'/>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='3' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='UIActivityIndicatorViewStyle' index='4' name='activityStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:options:progress:completed:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='2' name='options' type='I'/>
<arg declared_type='SDWebImageDownloaderProgressBlock' function_pointer='true' index='3' name='progressBlock' type='@?'>
<arg declared_type='NSInteger' type='i'/>
<arg declared_type='NSInteger' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='4' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:options:progress:completed:usingActivityIndicatorStyle:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='2' name='options' type='I'/>
<arg declared_type='SDWebImageDownloaderProgressBlock' function_pointer='true' index='3' name='progressBlock' type='@?'>
<arg declared_type='NSInteger' type='i'/>
<arg declared_type='NSInteger' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='SDWebImageCompletedBlock' function_pointer='true' index='4' name='completedBlock' type='@?'>
<arg declared_type='UIImage*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<arg declared_type='SDImageCacheType' type='i'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='UIActivityIndicatorViewStyle' index='5' name='activityStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:options:usingActivityIndicatorStyle:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='SDWebImageOptions' index='2' name='options' type='I'/>
<arg declared_type='UIActivityIndicatorViewStyle' index='3' name='activityStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:placeholderImage:usingActivityIndicatorStyle:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholder' type='@'/>
<arg declared_type='UIActivityIndicatorViewStyle' index='2' name='activityStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURL:usingActivityIndicatorStyle:'>
<arg declared_type='NSURL*' index='0' name='url' type='@'/>
<arg declared_type='UIActivityIndicatorViewStyle' index='1' name='activityStyle' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setImageWithURLRequest:placeholderImage:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='urlRequest' type='@'/>
<arg declared_type='UIImage*' index='1' name='placeholderImage' type='@'/>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, UIImage *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='UIImage*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)(NSURLRequest *, NSHTTPURLResponse *, NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='setSharedImageCache:'>
<arg declared_type='id' index='0' name='imageCache' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedImageCache'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='UIPopoverController'>
<method selector='bk_didDismissBlock'>
<retval declared_type='void (^)(UIPopoverController *)' function_pointer='true' type='@?'>
<arg declared_type='UIPopoverController*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_setDidDismissBlock:'>
<arg declared_type='void (^)(UIPopoverController *)' function_pointer='true' index='0' name='bk_didDismissBlock' type='@?'>
<arg declared_type='UIPopoverController*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setShouldDismissBlock:'>
<arg declared_type='BOOL (^)(UIPopoverController *)' function_pointer='true' index='0' name='bk_shouldDismissBlock' type='@?'>
<arg declared_type='UIPopoverController*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_shouldDismissBlock'>
<retval declared_type='BOOL (^)(UIPopoverController *)' function_pointer='true' type='@?'>
<arg declared_type='UIPopoverController*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</retval>
</method>
</class>
<class name='UIProgressView'>
<method selector='setProgressWithDownloadProgressOfOperation:animated:'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressWithDownloadProgressOfTask:animated:'>
<arg declared_type='NSURLSessionDownloadTask*' index='0' name='task' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressWithUploadProgressOfOperation:animated:'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setProgressWithUploadProgressOfTask:animated:'>
<arg declared_type='NSURLSessionUploadTask*' index='0' name='task' type='@'/>
<arg declared_type='BOOL' index='1' name='animated' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIRefreshControl'>
<method selector='setRefreshingWithStateOfOperation:'>
<arg declared_type='AFURLConnectionOperation*' index='0' name='operation' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setRefreshingWithStateOfTask:'>
<arg declared_type='NSURLSessionTask*' index='0' name='task' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UITextField'>
<method selector='bk_didBeginEditingBlock'>
<retval declared_type='void (^)(UITextField *)' function_pointer='true' type='@?'>
<arg declared_type='UITextField*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_didEndEditingBlock'>
<retval declared_type='void (^)(UITextField *)' function_pointer='true' type='@?'>
<arg declared_type='UITextField*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_shouldBeginEditingBlock'>
<retval declared_type='BOOL (^)(UITextField *)' function_pointer='true' type='@?'>
<arg declared_type='UITextField*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</retval>
</method>
<method selector='bk_shouldChangeCharactersInRangeWithReplacementStringBlock'>
<retval declared_type='BOOL (^)(UITextField *, NSRange, NSString *)' function_pointer='true' type='@?'>
<arg declared_type='UITextField*' type='@'/>
<arg declared_type='NSRange' type='{_NSRange=II}'/>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</retval>
</method>
<method selector='bk_shouldClearBlock'>
<retval declared_type='BOOL (^)(UITextField *)' function_pointer='true' type='@?'>
<arg declared_type='UITextField*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</retval>
</method>
<method selector='bk_shouldEndEditingBlock'>
<retval declared_type='BOOL (^)(UITextField *)' function_pointer='true' type='@?'>
<arg declared_type='UITextField*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</retval>
</method>
<method selector='bk_shouldReturnBlock'>
<retval declared_type='BOOL (^)(UITextField *)' function_pointer='true' type='@?'>
<arg declared_type='UITextField*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</retval>
</method>
<method selector='setBk_didBeginEditingBlock:'>
<arg declared_type='void (^)(UITextField *)' function_pointer='true' index='0' name='bk_didBeginEditingBlock' type='@?'>
<arg declared_type='UITextField*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBk_didEndEditingBlock:'>
<arg declared_type='void (^)(UITextField *)' function_pointer='true' index='0' name='bk_didEndEditingBlock' type='@?'>
<arg declared_type='UITextField*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBk_shouldBeginEditingBlock:'>
<arg declared_type='BOOL (^)(UITextField *)' function_pointer='true' index='0' name='bk_shouldBeginEditingBlock' type='@?'>
<arg declared_type='UITextField*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBk_shouldChangeCharactersInRangeWithReplacementStringBlock:'>
<arg declared_type='BOOL (^)(UITextField *, NSRange, NSString *)' function_pointer='true' index='0' name='bk_shouldChangeCharactersInRangeWithReplacementStringBlock' type='@?'>
<arg declared_type='UITextField*' type='@'/>
<arg declared_type='NSRange' type='{_NSRange=II}'/>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBk_shouldClearBlock:'>
<arg declared_type='BOOL (^)(UITextField *)' function_pointer='true' index='0' name='bk_shouldClearBlock' type='@?'>
<arg declared_type='UITextField*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBk_shouldEndEditingBlock:'>
<arg declared_type='BOOL (^)(UITextField *)' function_pointer='true' index='0' name='bk_shouldEndEditingBlock' type='@?'>
<arg declared_type='UITextField*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setBk_shouldReturnBlock:'>
<arg declared_type='BOOL (^)(UITextField *)' function_pointer='true' index='0' name='bk_shouldReturnBlock' type='@?'>
<arg declared_type='UITextField*' type='@'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIView'>
<method selector='bk_eachSubview:'>
<arg declared_type='void (^)(UIView *)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='UIView*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_whenDoubleTapped:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_whenTapped:'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_whenTouches:tapped:handler:'>
<arg declared_type='NSUInteger' index='0' name='numberOfTouches' type='I'/>
<arg declared_type='NSUInteger' index='1' name='numberOfTaps' type='I'/>
<arg declared_type='void (^)(void)' function_pointer='true' index='2' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIWebView'>
<method selector='bk_didFinishLoadBlock'>
<retval declared_type='void (^)(UIWebView *)' function_pointer='true' type='@?'>
<arg declared_type='UIWebView*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_didFinishWithErrorBlock'>
<retval declared_type='void (^)(UIWebView *, NSError *)' function_pointer='true' type='@?'>
<arg declared_type='UIWebView*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_didStartLoadBlock'>
<retval declared_type='void (^)(UIWebView *)' function_pointer='true' type='@?'>
<arg declared_type='UIWebView*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='bk_setDidFinishLoadBlock:'>
<arg declared_type='void (^)(UIWebView *)' function_pointer='true' index='0' name='bk_didFinishLoadBlock' type='@?'>
<arg declared_type='UIWebView*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setDidFinishWithErrorBlock:'>
<arg declared_type='void (^)(UIWebView *, NSError *)' function_pointer='true' index='0' name='bk_didFinishWithErrorBlock' type='@?'>
<arg declared_type='UIWebView*' type='@'/>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setDidStartLoadBlock:'>
<arg declared_type='void (^)(UIWebView *)' function_pointer='true' index='0' name='bk_didStartLoadBlock' type='@?'>
<arg declared_type='UIWebView*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_setShouldStartLoadBlock:'>
<arg declared_type='BOOL (^)(UIWebView *, NSURLRequest *, UIWebViewNavigationType)' function_pointer='true' index='0' name='bk_shouldStartLoadBlock' type='@?'>
<arg declared_type='UIWebView*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='UIWebViewNavigationType' type='i'/>
<retval declared_type='BOOL' type='B'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_shouldStartLoadBlock'>
<retval declared_type='BOOL (^)(UIWebView *, NSURLRequest *, UIWebViewNavigationType)' function_pointer='true' type='@?'>
<arg declared_type='UIWebView*' type='@'/>
<arg declared_type='NSURLRequest*' type='@'/>
<arg declared_type='UIWebViewNavigationType' type='i'/>
<retval declared_type='BOOL' type='B'/>
</retval>
</method>
<method selector='loadRequest:MIMEType:textEncodingName:progress:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='NSString*' index='1' name='MIMEType' type='@'/>
<arg declared_type='NSString*' index='2' name='textEncodingName' type='@'/>
<arg declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' index='3' name='progress' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSData *(^)(NSHTTPURLResponse *, NSData *)' function_pointer='true' index='4' name='success' type='@?'>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSData*' type='@'/>
<retval declared_type='NSData*' type='@'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='5' name='failure' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='loadRequest:progress:success:failure:'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='void (^)(NSUInteger, long long, long long)' function_pointer='true' index='1' name='progress' type='@?'>
<arg declared_type='NSUInteger' type='I'/>
<arg declared_type='long long' type='q'/>
<arg declared_type='long long' type='q'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSString *(^)(NSHTTPURLResponse *, NSString *)' function_pointer='true' index='2' name='success' type='@?'>
<arg declared_type='NSHTTPURLResponse*' type='@'/>
<arg declared_type='NSString*' type='@'/>
<retval declared_type='NSString*' type='@'/>
</arg>
<arg declared_type='void (^)(NSError *)' function_pointer='true' index='3' name='failure' type='@?'>
<arg declared_type='NSError*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='requestSerializer'>
<retval declared_type='AFHTTPRequestSerializer*' type='@'/>
</method>
<method selector='responseSerializer'>
<retval declared_type='AFHTTPResponseSerializer*' type='@'/>
</method>
<method selector='setRequestSerializer:'>
<arg declared_type='AFHTTPRequestSerializer*' index='0' name='requestSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResponseSerializer:'>
<arg declared_type='AFHTTPResponseSerializer*' index='0' name='responseSerializer' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='YLMoment'>
<method selector='addAmountOfTime:forCalendarUnit:'>
<arg declared_type='NSInteger' index='0' name='amount' type='i'/>
<arg declared_type='NSCalendarUnit' index='1' name='unit' type='I'/>
<retval declared_type='YLMoment*' type='@'/>
</method>
<method selector='addAmountOfTime:forUnitKey:'>
<arg declared_type='NSInteger' index='0' name='amount' type='i'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='YLMoment*' type='@'/>
</method>
<method selector='addDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='YLMoment*' type='@'/>
</method>
<method selector='calendar'>
<retval declared_type='NSCalendar*' type='@'/>
</method>
<method class_method='true' selector='calendarUnitForKey:'>
<arg declared_type='NSString*' index='0' name='key' type='@'/>
<retval declared_type='NSCalendarUnit' type='I'/>
</method>
<method selector='date'>
<retval declared_type='NSDate*' type='@'/>
</method>
<method selector='dateStyle'>
<retval declared_type='NSDateFormatterStyle' type='I'/>
</method>
<method selector='day'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='endOf:'>
<arg declared_type='NSString*' index='0' name='unitString' type='@'/>
<retval declared_type='YLMoment*' type='@'/>
</method>
<method selector='endOfCalendarUnit:'>
<arg declared_type='NSCalendarUnit' index='0' name='unit' type='I'/>
<retval declared_type='YLMoment*' type='@'/>
</method>
<method selector='format'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='format:'>
<arg declared_type='NSString*' index='0' name='dateFormat' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fromDate:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fromDate:withSuffix:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<arg declared_type='BOOL' index='1' name='suffixed' type='B'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fromMoment:'>
<arg declared_type='YLMoment*' index='0' name='moment' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fromMoment:withSuffix:'>
<arg declared_type='YLMoment*' index='0' name='moment' type='@'/>
<arg declared_type='BOOL' index='1' name='suffixed' type='B'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fromNow'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='fromNowWithSuffix:'>
<arg declared_type='BOOL' index='0' name='suffixed' type='B'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hour'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='initWithArray:'>
<arg declared_type='NSArray*' index='0' name='dateAsArray' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDate:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDateAsString:'>
<arg declared_type='NSString*' index='0' name='dateAsString' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDateAsString:format:'>
<arg declared_type='NSString*' index='0' name='dateAsString' type='@'/>
<arg declared_type='NSString*' index='1' name='dateFormat' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDateAsString:format:locale:timeZone:'>
<arg declared_type='NSString*' index='0' name='dateAsString' type='@'/>
<arg declared_type='NSString*' index='1' name='dateFormat' type='@'/>
<arg declared_type='NSLocale*' index='2' name='locale' type='@'/>
<arg declared_type='NSTimeZone*' index='3' name='timeZone' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initWithDateAsString:format:localeIdentifier:'>
<arg declared_type='NSString*' index='0' name='dateAsString' type='@'/>
<arg declared_type='NSString*' index='1' name='dateFormat' type='@'/>
<arg declared_type='NSString*' index='2' name='localeIdentifier' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToMoment:'>
<arg declared_type='YLMoment*' index='0' name='anotherMoment' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='locale'>
<retval declared_type='NSLocale*' type='@'/>
</method>
<method selector='minute'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method class_method='true' selector='momentWithArray:'>
<arg declared_type='NSArray*' index='0' name='dateAsArray' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='momentWithDate:'>
<arg declared_type='NSDate*' index='0' name='date' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='momentWithDateAsString:'>
<arg declared_type='NSString*' index='0' name='dateAsString' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='momentWithDateAsString:format:'>
<arg declared_type='NSString*' index='0' name='dateAsString' type='@'/>
<arg declared_type='NSString*' index='1' name='dateFormat' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='momentWithDateAsString:format:locale:timeZone:'>
<arg declared_type='NSString*' index='0' name='dateAsString' type='@'/>
<arg declared_type='NSString*' index='1' name='dateFormat' type='@'/>
<arg declared_type='NSLocale*' index='2' name='locale' type='@'/>
<arg declared_type='NSTimeZone*' index='3' name='timeZone' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='momentWithDateAsString:format:localeIdentifier:'>
<arg declared_type='NSString*' index='0' name='dateAsString' type='@'/>
<arg declared_type='NSString*' index='1' name='dateFormat' type='@'/>
<arg declared_type='NSString*' index='2' name='localeIdentifier' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='month'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method class_method='true' selector='now'>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='proxy'>
<retval declared_type='id' type='@'/>
</method>
<method selector='second'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setCalendar:'>
<arg declared_type='NSCalendar*' index='0' name='calendar' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDateStyle:'>
<arg declared_type='NSDateFormatterStyle' index='0' name='dateStyle' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setDay:'>
<arg declared_type='NSUInteger' index='0' name='day' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setHour:'>
<arg declared_type='NSUInteger' index='0' name='hour' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setLocale:'>
<arg declared_type='NSLocale*' index='0' name='locale' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMinute:'>
<arg declared_type='NSUInteger' index='0' name='minute' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMonth:'>
<arg declared_type='NSUInteger' index='0' name='month' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSecond:'>
<arg declared_type='NSUInteger' index='0' name='second' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeStyle:'>
<arg declared_type='NSDateFormatterStyle' index='0' name='timeStyle' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTimeZone:'>
<arg declared_type='NSTimeZone*' index='0' name='timeZone' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setYear:'>
<arg declared_type='NSUInteger' index='0' name='year' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='startOf:'>
<arg declared_type='NSString*' index='0' name='unitString' type='@'/>
<retval declared_type='YLMoment*' type='@'/>
</method>
<method selector='startOfCalendarUnit:'>
<arg declared_type='NSCalendarUnit' index='0' name='unit' type='I'/>
<retval declared_type='YLMoment*' type='@'/>
</method>
<method selector='subtractAmountOfTime:forCalendarUnit:'>
<arg declared_type='NSInteger' index='0' name='amount' type='i'/>
<arg declared_type='NSCalendarUnit' index='1' name='unit' type='I'/>
<retval declared_type='YLMoment*' type='@'/>
</method>
<method selector='subtractAmountOfTime:forUnitKey:'>
<arg declared_type='NSInteger' index='0' name='amount' type='i'/>
<arg declared_type='NSString*' index='1' name='key' type='@'/>
<retval declared_type='YLMoment*' type='@'/>
</method>
<method selector='subtractDuration:'>
<arg declared_type='NSTimeInterval' index='0' name='duration' type='d'/>
<retval declared_type='YLMoment*' type='@'/>
</method>
<method selector='timeStyle'>
<retval declared_type='NSDateFormatterStyle' type='I'/>
</method>
<method selector='timeZone'>
<retval declared_type='NSTimeZone*' type='@'/>
</method>
<method class_method='true' selector='utc'>
<retval declared_type='id' type='@'/>
</method>
<method selector='year'>
<retval declared_type='NSUInteger' type='I'/>
</method>
</class>
<informal_protocol name='A2BlockDelegate'>
<method class_method='true' selector='bk_linkDataSourceMethods:' type='v12@0:4@8'>
<arg declared_type='NSDictionary*' index='0' name='selectorsForPropertyNames' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_linkDelegateMethods:' type='v12@0:4@8'>
<arg declared_type='NSDictionary*' index='0' name='selectorsForPropertyNames' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_linkProtocol:methods:' type='v16@0:4@8@12'>
<arg declared_type='Protocol*' index='0' name='protocol' type='@'/>
<arg declared_type='NSDictionary*' index='1' name='selectorsForPropertyNames' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_registerDynamicDataSource' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_registerDynamicDataSourceNamed:' type='v12@0:4@8'>
<arg declared_type='NSString*' index='0' name='dataSourceName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_registerDynamicDelegate' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_registerDynamicDelegateNamed:' type='v12@0:4@8'>
<arg declared_type='NSString*' index='0' name='delegateName' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_registerDynamicDelegateNamed:forProtocol:' type='v16@0:4@8@12'>
<arg declared_type='NSString*' index='0' name='delegateName' type='@'/>
<arg declared_type='Protocol*' index='1' name='protocol' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='A2DynamicDelegate'>
<method selector='bk_dynamicDataSource' type='@8@0:4'>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_dynamicDelegate' type='@8@0:4'>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_dynamicDelegateForProtocol:' type='@12@0:4@8'>
<arg declared_type='Protocol*' index='0' name='protocol' type='@'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='AFImageCache'>
<method selector='cacheImage:forRequest:' type='v16@0:4@8@12'>
<arg declared_type='UIImage*' index='0' name='image' type='@'/>
<arg declared_type='NSURLRequest*' index='1' name='request' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='cachedImageForRequest:' type='@12@0:4@8'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='AFMultipartFormData'>
<method selector='appendPartWithFileData:name:fileName:mimeType:' type='v24@0:4@8@12@16@20'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithFileURL:name:error:' type='B20@0:4@8@12^@16'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFileURL:name:fileName:mimeType:error:' type='B28@0:4@8@12@16@20^@24'>
<arg declared_type='NSURL*' index='0' name='fileURL' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='NSString*' index='3' name='mimeType' type='@'/>
<arg declared_type='NSError**' index='4' name='error' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='appendPartWithFormData:name:' type='v16@0:4@8@12'>
<arg declared_type='NSData*' index='0' name='data' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithHeaders:body:' type='v16@0:4@8@12'>
<arg declared_type='NSDictionary*' index='0' name='headers' type='@'/>
<arg declared_type='NSData*' index='1' name='body' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='appendPartWithInputStream:name:fileName:length:mimeType:' type='v32@0:4@8@12@16q20@28'>
<arg declared_type='NSInputStream*' index='0' name='inputStream' type='@'/>
<arg declared_type='NSString*' index='1' name='name' type='@'/>
<arg declared_type='NSString*' index='2' name='fileName' type='@'/>
<arg declared_type='int64_t' index='3' name='length' type='q'/>
<arg declared_type='NSString*' index='4' name='mimeType' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='throttleBandwidthWithPacketSize:delay:' type='v20@0:4I8d12'>
<arg declared_type='NSUInteger' index='0' name='numberOfBytes' type='I'/>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='AFURLRequestSerialization'>
<method selector='requestBySerializingRequest:withParameters:error:' type='@20@0:4@8@12^@16'>
<arg declared_type='NSURLRequest*' index='0' name='request' type='@'/>
<arg declared_type='id' index='1' name='parameters' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='NSURLRequest*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='AFURLResponseSerialization'>
<method selector='responseObjectForResponse:data:error:' type='@20@0:4@8@12^@16'>
<arg declared_type='NSURLResponse*' index='0' name='response' type='@'/>
<arg declared_type='NSData*' index='1' name='data' type='@'/>
<arg declared_type='NSError**' index='2' name='error' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='BKAssociatedObjects'>
<method class_method='true' selector='bk_associateCopyOfValue:withKey:' type='v16@0:4@8r^v12'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_associateCopyOfValue:withKey:' type='v16@0:4@8r^v12'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_associateValue:withKey:' type='v16@0:4@8r^v12'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_associateValue:withKey:' type='v16@0:4@8r^v12'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_associatedValueForKey:' type='@12@0:4r^v8'>
<arg const='true' declared_type='void*' index='0' name='key' type='^v'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_associatedValueForKey:' type='@12@0:4r^v8'>
<arg const='true' declared_type='void*' index='0' name='key' type='^v'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bk_atomicallyAssociateCopyOfValue:withKey:' type='v16@0:4@8r^v12'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_atomicallyAssociateCopyOfValue:withKey:' type='v16@0:4@8r^v12'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_atomicallyAssociateValue:withKey:' type='v16@0:4@8r^v12'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_atomicallyAssociateValue:withKey:' type='v16@0:4@8r^v12'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_removeAllAssociatedObjects' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_removeAllAssociatedObjects' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_weaklyAssociateValue:withKey:' type='v16@0:4@8r^v12'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_weaklyAssociateValue:withKey:' type='v16@0:4@8r^v12'>
<arg declared_type='id' index='0' name='value' type='@'/>
<arg const='true' declared_type='void*' index='1' name='key' type='^v'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='BKBlockExecution'>
<method class_method='true' selector='bk_cancelBlock:' type='v12@0:4@8'>
<arg declared_type='id' index='0' name='block' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='bk_performBlock:afterDelay:' type='@20@0:4@?8d12'>
<arg declared_type='void (^)(void)' function_pointer='true' index='0' name='block' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='bk_performBlock:afterDelay:' type='@20@0:4@?8d12'>
<arg declared_type='void (^)(id)' function_pointer='true' index='0' name='block' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='NSTimeInterval' index='1' name='delay' type='d'/>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='BlockObservation'>
<method selector='bk_addObserverForKeyPath:identifier:options:task:' type='v24@0:4@8@12I16@?20'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='NSString*' index='1' name='token' type='@'/>
<arg declared_type='NSKeyValueObservingOptions' index='2' name='options' type='I'/>
<arg declared_type='void (^)(id, NSDictionary *)' function_pointer='true' index='3' name='task' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_addObserverForKeyPath:options:task:' type='@20@0:4@8I12@?16'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='NSKeyValueObservingOptions' index='1' name='options' type='I'/>
<arg declared_type='void (^)(id, NSDictionary *)' function_pointer='true' index='2' name='task' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='bk_addObserverForKeyPath:task:' type='@16@0:4@8@?12'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='void (^)(id)' function_pointer='true' index='1' name='task' type='@?'>
<arg declared_type='id' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='bk_addObserverForKeyPaths:identifier:options:task:' type='v24@0:4@8@12I16@?20'>
<arg declared_type='NSArray*' index='0' name='keyPaths' type='@'/>
<arg declared_type='NSString*' index='1' name='token' type='@'/>
<arg declared_type='NSKeyValueObservingOptions' index='2' name='options' type='I'/>
<arg declared_type='void (^)(id, NSString *, NSDictionary *)' function_pointer='true' index='3' name='task' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='NSString*' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_addObserverForKeyPaths:options:task:' type='@20@0:4@8I12@?16'>
<arg declared_type='NSArray*' index='0' name='keyPaths' type='@'/>
<arg declared_type='NSKeyValueObservingOptions' index='1' name='options' type='I'/>
<arg declared_type='void (^)(id, NSString *, NSDictionary *)' function_pointer='true' index='2' name='task' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='NSString*' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='bk_addObserverForKeyPaths:task:' type='@16@0:4@8@?12'>
<arg declared_type='NSArray*' index='0' name='keyPaths' type='@'/>
<arg declared_type='void (^)(id, NSDictionary *)' function_pointer='true' index='1' name='task' type='@?'>
<arg declared_type='id' type='@'/>
<arg declared_type='NSDictionary*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='bk_removeAllBlockObservers' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_removeObserverForKeyPath:identifier:' type='v16@0:4@8@12'>
<arg declared_type='NSString*' index='0' name='keyPath' type='@'/>
<arg declared_type='NSString*' index='1' name='token' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='bk_removeObserversWithIdentifier:' type='v12@0:4@8'>
<arg declared_type='NSString*' index='0' name='token' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='MBProgressHUDDelegate'>
<method selector='hudWasHidden:' type='v12@0:4@8'>
<arg declared_type='MBProgressHUD*' index='0' name='hud' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SDWebImageManagerDelegate'>
<method selector='imageManager:shouldDownloadImageForURL:' type='B16@0:4@8@12'>
<arg declared_type='SDWebImageManager*' index='0' name='imageManager' type='@'/>
<arg declared_type='NSURL*' index='1' name='imageURL' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='imageManager:transformDownloadedImage:withURL:' type='@20@0:4@8@12@16'>
<arg declared_type='SDWebImageManager*' index='0' name='imageManager' type='@'/>
<arg declared_type='UIImage*' index='1' name='image' type='@'/>
<arg declared_type='NSURL*' index='2' name='imageURL' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
</informal_protocol>
<informal_protocol name='SDWebImageOperation'>
<method selector='cancel' type='v8@0:4'>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
<informal_protocol name='SDWebImagePrefetcherDelegate'>
<method selector='imagePrefetcher:didFinishWithTotalCount:skippedCount:' type='v20@0:4@8I12I16'>
<arg declared_type='SDWebImagePrefetcher*' index='0' name='imagePrefetcher' type='@'/>
<arg declared_type='NSUInteger' index='1' name='totalCount' type='I'/>
<arg declared_type='NSUInteger' index='2' name='skippedCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='imagePrefetcher:didPrefetchURL:finishedCount:totalCount:' type='v24@0:4@8@12I16I20'>
<arg declared_type='SDWebImagePrefetcher*' index='0' name='imagePrefetcher' type='@'/>
<arg declared_type='NSURL*' index='1' name='imageURL' type='@'/>
<arg declared_type='NSUInteger' index='2' name='finishedCount' type='I'/>
<arg declared_type='NSUInteger' index='3' name='totalCount' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</informal_protocol>
</signatures>
